{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = 4450;\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.get('/korisnici', function (req, res) {\n  return res.json(_store[\"default\"].korisnici);\n});\napp.get('/turniri', function (req, res) {\n  return res.json(_store[\"default\"].turniri);\n});\napp.get('/figure', function (req, res) {\n  return res.json(_store[\"default\"].figure);\n});\napp.get('/galerija', function (req, res) {\n  return res.json(_store[\"default\"].galerija);\n});\napp.post('/korisnici', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/korisnici/user_name');\n  res.send();\n});\napp.post('/turniri', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/turniri');\n  res.send();\n});\napp.post('/figure', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/figure');\n  res.send();\n});\napp.post('/galerija', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/galerija');\n  res.send();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJyZXEiLCJyZXMiLCJkYXRhIiwia29yaXNuaWNpIiwidHVybmlyaSIsImZpZ3VyZSIsImdhbGVyaWphIiwicG9zdCIsInN0YXR1c0NvZGUiLCJzZXRIZWFkZXIiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsdUJBQVI7QUFDQUYsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQUosR0FBRyxDQUFDSyxNQUFKLENBQVdKLElBQVgsRUFBaUI7QUFBQSxTQUFNSyxPQUFPLENBQUNDLEdBQVIsZ0NBQW9DTixJQUFwQyxXQUFOO0FBQUEsQ0FBakI7QUFDQUQsR0FBRyxDQUFDUSxHQUFKLENBQVEsWUFBUixFQUFzQixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNOLElBQUosQ0FBU08sa0JBQUtDLFNBQWQsQ0FBZDtBQUFBLENBQXRCO0FBQ0FaLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFVBQVIsRUFBb0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLRSxPQUFkLENBQWQ7QUFBQSxDQUFwQjtBQUNBYixHQUFHLENBQUNRLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ04sSUFBSixDQUFTTyxrQkFBS0csTUFBZCxDQUFkO0FBQUEsQ0FBbkI7QUFDQWQsR0FBRyxDQUFDUSxHQUFKLENBQVEsV0FBUixFQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNOLElBQUosQ0FBU08sa0JBQUtJLFFBQWQsQ0FBZDtBQUFBLENBQXJCO0FBRUFmLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxZQUFULEVBQXVCLFVBQUNQLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosR0FBaUIsR0FBakI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxTQUFKLENBQWMsVUFBZCxFQUEwQixzQkFBMUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxJQUFKO0FBQ0gsQ0FKRDtBQU1BbkIsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLFVBQVQsRUFBcUIsVUFBQ1AsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0JBLEVBQUFBLEdBQUcsQ0FBQ08sVUFBSixHQUFpQixHQUFqQjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLFNBQUosQ0FBYyxVQUFkLEVBQTBCLFVBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQ7QUFNQW5CLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxTQUFULEVBQW9CLFVBQUNQLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlCQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosR0FBaUIsR0FBakI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxTQUFKLENBQWMsVUFBZCxFQUEwQixTQUExQjtBQUNBUixFQUFBQSxHQUFHLENBQUNTLElBQUo7QUFDSCxDQUpEO0FBTUFuQixHQUFHLENBQUNnQixJQUFKLENBQVMsV0FBVCxFQUFzQixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsV0FBMUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxJQUFKO0FBQ0gsQ0FKRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNsYXZlblxcT25lRHJpdmVcXERlc2t0b3BcXGZpZ3VyaWNcXEJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBkYXRhIGZyb20gJy4vc3RvcmUnO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydCA9IDQ0NTA7XHJcblxyXG5hcHAudXNlKGNvcnMoKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgXFxuXFxuaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9L1xcblxcbmApKTtcclxuYXBwLmdldCgnL2tvcmlzbmljaScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS5rb3Jpc25pY2kpKTtcclxuYXBwLmdldCgnL3R1cm5pcmknLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEudHVybmlyaSkpO1xyXG5hcHAuZ2V0KCcvZmlndXJlJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmZpZ3VyZSkpO1xyXG5hcHAuZ2V0KCcvZ2FsZXJpamEnLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEuZ2FsZXJpamEpKTtcclxuXHJcbmFwcC5wb3N0KCcva29yaXNuaWNpJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy9rb3Jpc25pY2kvdXNlcl9uYW1lJyk7XHJcbiAgICByZXMuc2VuZCgpO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvdHVybmlyaScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcvdHVybmlyaScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL2ZpZ3VyZScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcvZmlndXJlJyk7XHJcbiAgICByZXMuc2VuZCgpO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvZ2FsZXJpamEnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL2dhbGVyaWphJyk7XHJcbiAgICByZXMuc2VuZCgpO1xyXG59KTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "get",
        "req",
        "res",
        "data",
        "korisnici",
        "turniri",
        "figure",
        "galerija",
        "post",
        "statusCode",
        "setHeader",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAJ,GAAG,CAACK,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,gCAAoCN,IAApC,WAAN;AAAA,CAAjB;AACAD,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKC,SAAd,CAAd;AAAA,CAAtB;AACAZ,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKE,OAAd,CAAd;AAAA,CAApB;AACAb,GAAG,CAACQ,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKG,MAAd,CAAd;AAAA,CAAnB;AACAd,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKI,QAAd,CAAd;AAAA,CAArB;AAEAf,GAAG,CAACgB,IAAJ,CAAS,YAAT,EAAuB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,sBAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,UAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,SAAT,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,SAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,WAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\n\r\nconst app = express();\r\nconst port = 4450;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\napp.get('/korisnici', (req, res) => res.json(data.korisnici));\r\napp.get('/turniri', (req, res) => res.json(data.turniri));\r\napp.get('/figure', (req, res) => res.json(data.figure));\r\napp.get('/galerija', (req, res) => res.json(data.galerija));\r\n\r\napp.post('/korisnici', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/korisnici/user_name');\r\n    res.send();\r\n});\r\n\r\napp.post('/turniri', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/turniri');\r\n    res.send();\r\n});\r\n\r\napp.post('/figure', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/figure');\r\n    res.send();\r\n});\r\n\r\napp.post('/galerija', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/galerija');\r\n    res.send();\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620035859469
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figuric\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnicko_ime: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnicko_ime: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29faW1lIiwibG96aW5rYSIsInR1cm5pcmkiLCJkYXR1bSIsInZyaWplbWUiLCJsb2thY2lqYSIsImtyYXRraV9vcGlzIiwiZmlndXJlIiwidXJsX3NsaWtlIiwiZ2FsZXJpamEiLCJuYXNsb3YiLCJvcGlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUc7QUFFUEMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BELElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lFLE1BQUFBLEtBQUssRUFBRSxFQURYO0FBRUlDLE1BQUFBLGNBQWMsRUFBRSxFQUZwQjtBQUdJQyxNQUFBQSxPQUFPLEVBQUU7QUFIYixLQURFO0FBREMsR0FGSjtBQVdQQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEwsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUcsTUFBQUEsY0FBYyxFQUFFLEVBRHBCO0FBRUlHLE1BQUFBLEtBQUssRUFBRSxJQUZYO0FBR0lDLE1BQUFBLE9BQU8sRUFBRSxJQUhiO0FBSUlDLE1BQUFBLFFBQVEsRUFBRSxFQUpkO0FBS0lDLE1BQUFBLFdBQVcsRUFBRTtBQUxqQixLQURFO0FBREQsR0FYRjtBQXNCUEMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pWLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lXLE1BQUFBLFNBQVMsRUFBRTtBQURmLEtBREU7QUFERixHQXRCRDtBQTZCUEMsRUFBQUEsUUFBUSxFQUFFO0FBQ05aLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lhLE1BQUFBLE1BQU0sRUFBRSxFQURaO0FBRUlDLE1BQUFBLElBQUksRUFBRSxFQUZWO0FBR0lILE1BQUFBLFNBQVMsRUFBRTtBQUhmLEtBREU7QUFEQTtBQTdCSCxDQUFYO2VBd0NlWCxJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcU2xhdmVuXFxPbmVEcml2ZVxcRGVza3RvcFxcZmlndXJpY1xcQmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZGF0YSA9IHtcclxuICAgIFxyXG4gICAga29yaXNuaWNpOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBlbWFpbDogXCJcIixcclxuICAgICAgICAgICAgICAgIGtvcmlzbmlja29faW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgbG96aW5rYTogXCJcIixcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgfSwgXHJcbiAgICB0dXJuaXJpOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvX2ltZTogXCJcIixcclxuICAgICAgICAgICAgICAgIGRhdHVtOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgdnJpamVtZTogbnVsbCxcclxuICAgICAgICAgICAgICAgIGxva2FjaWphOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAga3JhdGtpX29waXM6IFwiXCIsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAgZmlndXJlOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmxfc2xpa2U6IG51bGwsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAgZ2FsZXJpamE6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hc2xvdjogXCJcIixcclxuICAgICAgICAgICAgICAgIG9waXM6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICB1cmxfc2xpa2U6IG51bGwsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG5cclxufVxyXG5leHBvcnQgZGVmYXVsdCBkYXRhOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnicko_ime",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,cAAc,EAAE,EAFpB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,cAAc,EAAE,EADpB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figuric\\Backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnicko_ime: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnicko_ime: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619609866000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = 4450;\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\n\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.get('/korisnici', function (req, res) {\n  return res.json(_store[\"default\"].korisnici);\n});\napp.get('/turniri', function (req, res) {\n  return res.json(_store[\"default\"].turniri);\n});\napp.get('/figure', function (req, res) {\n  return res.json(_store[\"default\"].figure);\n});\napp.get('/galerija', function (req, res) {\n  return res.json(_store[\"default\"].galerija);\n});\napp.post('/korisnici', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/korisnici/user_name');\n  res.send();\n});\napp.post('/turniri', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/turniri');\n  res.send();\n});\napp.post('/figure', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/figure');\n  res.send();\n});\napp.post('/galerija', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/galerija');\n  res.send();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJyZXEiLCJyZXMiLCJkYXRhIiwia29yaXNuaWNpIiwidHVybmlyaSIsImZpZ3VyZSIsImdhbGVyaWphIiwicG9zdCIsInN0YXR1c0NvZGUiLCJzZXRIZWFkZXIiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsdUJBQVI7QUFDQUYsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXSixJQUFYLEVBQWlCO0FBQUEsU0FBTUssT0FBTyxDQUFDQyxHQUFSLGdDQUFvQ04sSUFBcEMsV0FBTjtBQUFBLENBQWpCO0FBQ0FELEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLQyxTQUFkLENBQWQ7QUFBQSxDQUF0QjtBQUNBWixHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ04sSUFBSixDQUFTTyxrQkFBS0UsT0FBZCxDQUFkO0FBQUEsQ0FBcEI7QUFDQWIsR0FBRyxDQUFDUSxHQUFKLENBQVEsU0FBUixFQUFtQixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNOLElBQUosQ0FBU08sa0JBQUtHLE1BQWQsQ0FBZDtBQUFBLENBQW5CO0FBQ0FkLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLSSxRQUFkLENBQWQ7QUFBQSxDQUFyQjtBQUVBZixHQUFHLENBQUNnQixJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ0EsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsc0JBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQ7QUFNQW5CLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNQLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosR0FBaUIsR0FBakI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxTQUFKLENBQWMsVUFBZCxFQUEwQixVQUExQjtBQUNBUixFQUFBQSxHQUFHLENBQUNTLElBQUo7QUFDSCxDQUpEO0FBTUFuQixHQUFHLENBQUNnQixJQUFKLENBQVMsU0FBVCxFQUFvQixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QkEsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsU0FBMUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxJQUFKO0FBQ0gsQ0FKRDtBQU1BbkIsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ1AsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ08sVUFBSixHQUFpQixHQUFqQjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLFNBQUosQ0FBYyxVQUFkLEVBQTBCLFdBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXEdpdFxcRmlndXJpeFxcQmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGRhdGEgZnJvbSAnLi9zdG9yZSc7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2RiLmpzJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0ID0gNDQ1MDtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG4vKlxyXG5hcHAuZ2V0KCcvZ2FsZXJpamEnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBwb3N0cyA9IHN0b3JhZ2UuZ2FsZXJpamE7XHJcbiAgICBsZXQgcXVlcnkgPSByZXEucXVlcnk7XHJcbn0pXHJcblxyXG5hcHAuZ2V0KCdnYWxlcmlqYScsIGFzeW5jKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICBsZXQgY3Vyc29yID0gYXdhaXQgZGIuY29sbGVjdGlvbihcImdhbGVyaWphXCIpLmZpbmQoKS5zb3J0KHtwb3N0ZWRBdDogLTF9KVxyXG4gICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBjdXJzb3IudG9BcnJheSgpXHJcblxyXG4gICAgcmVzLmpzb24ocmVzdWx0cylcclxufSlcclxuKi9cclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYFxcblxcbmh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fS9cXG5cXG5gKSk7XHJcbmFwcC5nZXQoJy9rb3Jpc25pY2knLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEua29yaXNuaWNpKSk7XHJcbmFwcC5nZXQoJy90dXJuaXJpJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLnR1cm5pcmkpKTtcclxuYXBwLmdldCgnL2ZpZ3VyZScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS5maWd1cmUpKTtcclxuYXBwLmdldCgnL2dhbGVyaWphJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmdhbGVyaWphKSk7XHJcblxyXG5hcHAucG9zdCgnL2tvcmlzbmljaScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcva29yaXNuaWNpL3VzZXJfbmFtZScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL3R1cm5pcmknLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL3R1cm5pcmknKTtcclxuICAgIHJlcy5zZW5kKCk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9maWd1cmUnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL2ZpZ3VyZScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL2dhbGVyaWphJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy9nYWxlcmlqYScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "get",
        "req",
        "res",
        "data",
        "korisnici",
        "turniri",
        "figure",
        "galerija",
        "post",
        "statusCode",
        "setHeader",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,GAAG,CAACK,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,gCAAoCN,IAApC,WAAN;AAAA,CAAjB;AACAD,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKC,SAAd,CAAd;AAAA,CAAtB;AACAZ,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKE,OAAd,CAAd;AAAA,CAApB;AACAb,GAAG,CAACQ,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKG,MAAd,CAAd;AAAA,CAAnB;AACAd,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKI,QAAd,CAAd;AAAA,CAArB;AAEAf,GAAG,CAACgB,IAAJ,CAAS,YAAT,EAAuB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,sBAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,UAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,SAAT,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,SAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,WAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\nimport connect from './db.js'\r\n\r\nconst app = express();\r\nconst port = 4450;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\napp.get('/korisnici', (req, res) => res.json(data.korisnici));\r\napp.get('/turniri', (req, res) => res.json(data.turniri));\r\napp.get('/figure', (req, res) => res.json(data.figure));\r\napp.get('/galerija', (req, res) => res.json(data.galerija));\r\n\r\napp.post('/korisnici', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/korisnici/user_name');\r\n    res.send();\r\n});\r\n\r\napp.post('/turniri', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/turniri');\r\n    res.send();\r\n});\r\n\r\napp.post('/figure', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/figure');\r\n    res.send();\r\n});\r\n\r\napp.post('/galerija', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/galerija');\r\n    res.send();\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620732823425
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnicko_ime: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnicko_ime: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29faW1lIiwibG96aW5rYSIsInR1cm5pcmkiLCJkYXR1bSIsInZyaWplbWUiLCJsb2thY2lqYSIsImtyYXRraV9vcGlzIiwiZmlndXJlIiwidXJsX3NsaWtlIiwiZ2FsZXJpamEiLCJuYXNsb3YiLCJvcGlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUc7QUFFUEMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BELElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lFLE1BQUFBLEtBQUssRUFBRSxFQURYO0FBRUlDLE1BQUFBLGNBQWMsRUFBRSxFQUZwQjtBQUdJQyxNQUFBQSxPQUFPLEVBQUU7QUFIYixLQURFO0FBREMsR0FGSjtBQVdQQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEwsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUcsTUFBQUEsY0FBYyxFQUFFLEVBRHBCO0FBRUlHLE1BQUFBLEtBQUssRUFBRSxJQUZYO0FBR0lDLE1BQUFBLE9BQU8sRUFBRSxJQUhiO0FBSUlDLE1BQUFBLFFBQVEsRUFBRSxFQUpkO0FBS0lDLE1BQUFBLFdBQVcsRUFBRTtBQUxqQixLQURFO0FBREQsR0FYRjtBQXNCUEMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pWLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lXLE1BQUFBLFNBQVMsRUFBRTtBQURmLEtBREU7QUFERixHQXRCRDtBQTZCUEMsRUFBQUEsUUFBUSxFQUFFO0FBQ05aLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lhLE1BQUFBLE1BQU0sRUFBRSxFQURaO0FBRUlDLE1BQUFBLElBQUksRUFBRSxFQUZWO0FBR0lILE1BQUFBLFNBQVMsRUFBRTtBQUhmLEtBREU7QUFEQTtBQTdCSCxDQUFYO2VBd0NlWCxJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSmFuXFxEZXNrdG9wXFxHaXRcXEZpZ3VyaXhcXEJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGRhdGEgPSB7XHJcbiAgICBcclxuICAgIGtvcmlzbmljaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZW1haWw6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvX2ltZTogXCJcIixcclxuICAgICAgICAgICAgICAgIGxvemlua2E6IFwiXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sIFxyXG4gICAgdHVybmlyaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAga29yaXNuaWNrb19pbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBkYXR1bTogbnVsbCxcclxuICAgICAgICAgICAgICAgIHZyaWplbWU6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBsb2thY2lqYTogXCJcIixcclxuICAgICAgICAgICAgICAgIGtyYXRraV9vcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGZpZ3VyZToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGdhbGVyaWphOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYXNsb3Y6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBvcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgZGF0YTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnicko_ime",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,cAAc,EAAE,EAFpB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,cAAc,EAAE,EADpB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnicko_ime: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnicko_ime: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620729391065
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEphblxcRGVza3RvcFxcR2l0XFxGaWd1cml4XFxCYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tIFwibW9uZ29kYlwiXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSBcIm1vbmdvZGIrc3J2Oi8vRmlndXJpWDpwcm9ncmFtZXJpc3RvbGplY2FAY2x1c3RlcjAuZnNudnMubW9uZ29kYi5uZXQvbXlGaXJzdERhdGFiYXNlP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xyXG5cclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZywge1xyXG4gICAgdXNlck5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIHVzZXJVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGxcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PntcclxuXHJcbiAgICAgICAgaWYgKGRiICYmIGNsaWVudC5pc0Nvbm5lY3RlZCgpKXtcclxuICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xpZW50LmNvbm5lY3QoZXJyID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKXtcclxuICAgICAgICAgICAgICAgIHJlamVjdChcIkRvxaFsbyBqZSBkbyBncmXFoWtlIHByaWxpa29tIHNwYWphbmphOiBcIiArIGVycilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVc3BqZcWhbm8gc3BhamFuamUgbmEgYmF6dVwiKVxyXG4gICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoXCJmaWd1cml4XCIpXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKGRiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1620730962641
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = 4450;\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\n\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.get('/korisnici', function (req, res) {\n  return res.json(_store[\"default\"].korisnici);\n});\napp.get('/turniri', function (req, res) {\n  return res.json(_store[\"default\"].turniri);\n});\napp.get('/figure', function (req, res) {\n  return res.json(_store[\"default\"].figure);\n});\napp.get('/galerija', function (req, res) {\n  return res.json(_store[\"default\"].galerija);\n});\napp.post('/korisnici', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/korisnici/user_name');\n  res.send();\n});\napp.post('/turniri', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/turniri');\n  res.send();\n});\napp.post('/figure', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/figure');\n  res.send();\n});\napp.post('/galerija', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/galerija');\n  res.send();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJyZXEiLCJyZXMiLCJkYXRhIiwia29yaXNuaWNpIiwidHVybmlyaSIsImZpZ3VyZSIsImdhbGVyaWphIiwicG9zdCIsInN0YXR1c0NvZGUiLCJzZXRIZWFkZXIiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsdUJBQVI7QUFDQUYsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXSixJQUFYLEVBQWlCO0FBQUEsU0FBTUssT0FBTyxDQUFDQyxHQUFSLGdDQUFvQ04sSUFBcEMsV0FBTjtBQUFBLENBQWpCO0FBQ0FELEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLQyxTQUFkLENBQWQ7QUFBQSxDQUF0QjtBQUNBWixHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ04sSUFBSixDQUFTTyxrQkFBS0UsT0FBZCxDQUFkO0FBQUEsQ0FBcEI7QUFDQWIsR0FBRyxDQUFDUSxHQUFKLENBQVEsU0FBUixFQUFtQixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNOLElBQUosQ0FBU08sa0JBQUtHLE1BQWQsQ0FBZDtBQUFBLENBQW5CO0FBQ0FkLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLSSxRQUFkLENBQWQ7QUFBQSxDQUFyQjtBQUVBZixHQUFHLENBQUNnQixJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ0EsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsc0JBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQ7QUFNQW5CLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNQLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosR0FBaUIsR0FBakI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxTQUFKLENBQWMsVUFBZCxFQUEwQixVQUExQjtBQUNBUixFQUFBQSxHQUFHLENBQUNTLElBQUo7QUFDSCxDQUpEO0FBTUFuQixHQUFHLENBQUNnQixJQUFKLENBQVMsU0FBVCxFQUFvQixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QkEsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsU0FBMUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxJQUFKO0FBQ0gsQ0FKRDtBQU1BbkIsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ1AsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ08sVUFBSixHQUFpQixHQUFqQjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLFNBQUosQ0FBYyxVQUFkLEVBQTBCLFdBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXEdpdFxcRmlndXJpeFxcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGRhdGEgZnJvbSAnLi9zdG9yZSc7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2RiLmpzJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0ID0gNDQ1MDtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG4vKlxyXG5hcHAuZ2V0KCcvZ2FsZXJpamEnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBwb3N0cyA9IHN0b3JhZ2UuZ2FsZXJpamE7XHJcbiAgICBsZXQgcXVlcnkgPSByZXEucXVlcnk7XHJcbn0pXHJcblxyXG5hcHAuZ2V0KCdnYWxlcmlqYScsIGFzeW5jKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICBsZXQgY3Vyc29yID0gYXdhaXQgZGIuY29sbGVjdGlvbihcImdhbGVyaWphXCIpLmZpbmQoKS5zb3J0KHtwb3N0ZWRBdDogLTF9KVxyXG4gICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBjdXJzb3IudG9BcnJheSgpXHJcblxyXG4gICAgcmVzLmpzb24ocmVzdWx0cylcclxufSlcclxuKi9cclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYFxcblxcbmh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fS9cXG5cXG5gKSk7XHJcbmFwcC5nZXQoJy9rb3Jpc25pY2knLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEua29yaXNuaWNpKSk7XHJcbmFwcC5nZXQoJy90dXJuaXJpJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLnR1cm5pcmkpKTtcclxuYXBwLmdldCgnL2ZpZ3VyZScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS5maWd1cmUpKTtcclxuYXBwLmdldCgnL2dhbGVyaWphJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmdhbGVyaWphKSk7XHJcblxyXG5hcHAucG9zdCgnL2tvcmlzbmljaScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcva29yaXNuaWNpL3VzZXJfbmFtZScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL3R1cm5pcmknLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL3R1cm5pcmknKTtcclxuICAgIHJlcy5zZW5kKCk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9maWd1cmUnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL2ZpZ3VyZScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG5hcHAucG9zdCgnL2dhbGVyaWphJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy9nYWxlcmlqYScpO1xyXG4gICAgcmVzLnNlbmQoKTtcclxufSk7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "get",
        "req",
        "res",
        "data",
        "korisnici",
        "turniri",
        "figure",
        "galerija",
        "post",
        "statusCode",
        "setHeader",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,GAAG,CAACK,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,gCAAoCN,IAApC,WAAN;AAAA,CAAjB;AACAD,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKC,SAAd,CAAd;AAAA,CAAtB;AACAZ,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKE,OAAd,CAAd;AAAA,CAApB;AACAb,GAAG,CAACQ,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKG,MAAd,CAAd;AAAA,CAAnB;AACAd,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKI,QAAd,CAAd;AAAA,CAArB;AAEAf,GAAG,CAACgB,IAAJ,CAAS,YAAT,EAAuB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,sBAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,UAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,SAAT,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,SAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,WAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\nimport connect from './db.js'\r\n\r\nconst app = express();\r\nconst port = 4450;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\napp.get('/korisnici', (req, res) => res.json(data.korisnici));\r\napp.get('/turniri', (req, res) => res.json(data.turniri));\r\napp.get('/figure', (req, res) => res.json(data.figure));\r\napp.get('/galerija', (req, res) => res.json(data.galerija));\r\n\r\napp.post('/korisnici', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/korisnici/user_name');\r\n    res.send();\r\n});\r\n\r\napp.post('/turniri', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/turniri');\r\n    res.send();\r\n});\r\n\r\napp.post('/figure', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/figure');\r\n    res.send();\r\n});\r\n\r\napp.post('/galerija', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/galerija');\r\n    res.send();\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620732823425
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnicko_ime: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnicko_ime: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29faW1lIiwibG96aW5rYSIsInR1cm5pcmkiLCJkYXR1bSIsInZyaWplbWUiLCJsb2thY2lqYSIsImtyYXRraV9vcGlzIiwiZmlndXJlIiwidXJsX3NsaWtlIiwiZ2FsZXJpamEiLCJuYXNsb3YiLCJvcGlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUc7QUFFUEMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BELElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lFLE1BQUFBLEtBQUssRUFBRSxFQURYO0FBRUlDLE1BQUFBLGNBQWMsRUFBRSxFQUZwQjtBQUdJQyxNQUFBQSxPQUFPLEVBQUU7QUFIYixLQURFO0FBREMsR0FGSjtBQVdQQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEwsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUcsTUFBQUEsY0FBYyxFQUFFLEVBRHBCO0FBRUlHLE1BQUFBLEtBQUssRUFBRSxJQUZYO0FBR0lDLE1BQUFBLE9BQU8sRUFBRSxJQUhiO0FBSUlDLE1BQUFBLFFBQVEsRUFBRSxFQUpkO0FBS0lDLE1BQUFBLFdBQVcsRUFBRTtBQUxqQixLQURFO0FBREQsR0FYRjtBQXNCUEMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pWLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lXLE1BQUFBLFNBQVMsRUFBRTtBQURmLEtBREU7QUFERixHQXRCRDtBQTZCUEMsRUFBQUEsUUFBUSxFQUFFO0FBQ05aLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lhLE1BQUFBLE1BQU0sRUFBRSxFQURaO0FBRUlDLE1BQUFBLElBQUksRUFBRSxFQUZWO0FBR0lILE1BQUFBLFNBQVMsRUFBRTtBQUhmLEtBREU7QUFEQTtBQTdCSCxDQUFYO2VBd0NlWCxJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSmFuXFxEZXNrdG9wXFxHaXRcXEZpZ3VyaXhcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGRhdGEgPSB7XHJcbiAgICBcclxuICAgIGtvcmlzbmljaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZW1haWw6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvX2ltZTogXCJcIixcclxuICAgICAgICAgICAgICAgIGxvemlua2E6IFwiXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sIFxyXG4gICAgdHVybmlyaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAga29yaXNuaWNrb19pbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBkYXR1bTogbnVsbCxcclxuICAgICAgICAgICAgICAgIHZyaWplbWU6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBsb2thY2lqYTogXCJcIixcclxuICAgICAgICAgICAgICAgIGtyYXRraV9vcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGZpZ3VyZToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGdhbGVyaWphOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYXNsb3Y6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBvcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgZGF0YTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnicko_ime",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,cAAc,EAAE,EAFpB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,cAAc,EAAE,EADpB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnicko_ime: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnicko_ime: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620729391065
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\Git\\\\Figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEphblxcRGVza3RvcFxcR2l0XFxGaWd1cml4XFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tIFwibW9uZ29kYlwiXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSBcIm1vbmdvZGIrc3J2Oi8vRmlndXJpWDpwcm9ncmFtZXJpc3RvbGplY2FAY2x1c3RlcjAuZnNudnMubW9uZ29kYi5uZXQvbXlGaXJzdERhdGFiYXNlP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xyXG5cclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZywge1xyXG4gICAgdXNlck5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIHVzZXJVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGxcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PntcclxuXHJcbiAgICAgICAgaWYgKGRiICYmIGNsaWVudC5pc0Nvbm5lY3RlZCgpKXtcclxuICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xpZW50LmNvbm5lY3QoZXJyID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKXtcclxuICAgICAgICAgICAgICAgIHJlamVjdChcIkRvxaFsbyBqZSBkbyBncmXFoWtlIHByaWxpa29tIHNwYWphbmphOiBcIiArIGVycilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVc3BqZcWhbm8gc3BhamFuamUgbmEgYmF6dVwiKVxyXG4gICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoXCJmaWd1cml4XCIpXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKGRiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\Git\\Figurix\\backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1620730962641
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = 4450;\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\n\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.get('/korisnici', function (req, res) {\n  return res.json(_store[\"default\"].korisnici);\n});\napp.get('/turniri', function (req, res) {\n  return res.json(_store[\"default\"].turniri);\n});\napp.get('/figure', function (req, res) {\n  return res.json(_store[\"default\"].figure);\n});\napp.get('/galerija', function (req, res) {\n  return res.json(_store[\"default\"].galerija);\n});\napp.post('/korisnici', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/korisnici/user_name');\n  res.send();\n});\napp.post('/turniri', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/turniri');\n  res.send();\n});\napp.post('/figure', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/figure');\n  res.send();\n});\napp.post('/galerija', function (req, res) {\n  res.statusCode = 201;\n  res.setHeader('Location', '/galerija');\n  res.send();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJyZXEiLCJyZXMiLCJkYXRhIiwia29yaXNuaWNpIiwidHVybmlyaSIsImZpZ3VyZSIsImdhbGVyaWphIiwicG9zdCIsInN0YXR1c0NvZGUiLCJzZXRIZWFkZXIiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsdUJBQVI7QUFDQUYsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXSixJQUFYLEVBQWlCO0FBQUEsU0FBTUssT0FBTyxDQUFDQyxHQUFSLGdDQUFvQ04sSUFBcEMsV0FBTjtBQUFBLENBQWpCO0FBQ0FELEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLQyxTQUFkLENBQWQ7QUFBQSxDQUF0QjtBQUNBWixHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ04sSUFBSixDQUFTTyxrQkFBS0UsT0FBZCxDQUFkO0FBQUEsQ0FBcEI7QUFDQWIsR0FBRyxDQUFDUSxHQUFKLENBQVEsU0FBUixFQUFtQixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNOLElBQUosQ0FBU08sa0JBQUtHLE1BQWQsQ0FBZDtBQUFBLENBQW5CO0FBQ0FkLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTixJQUFKLENBQVNPLGtCQUFLSSxRQUFkLENBQWQ7QUFBQSxDQUFyQjtBQUVBZixHQUFHLENBQUNnQixJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ0EsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsc0JBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQ7QUFNQW5CLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNQLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosR0FBaUIsR0FBakI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxTQUFKLENBQWMsVUFBZCxFQUEwQixVQUExQjtBQUNBUixFQUFBQSxHQUFHLENBQUNTLElBQUo7QUFDSCxDQUpEO0FBTUFuQixHQUFHLENBQUNnQixJQUFKLENBQVMsU0FBVCxFQUFvQixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QkEsRUFBQUEsR0FBRyxDQUFDTyxVQUFKLEdBQWlCLEdBQWpCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsU0FBSixDQUFjLFVBQWQsRUFBMEIsU0FBMUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxJQUFKO0FBQ0gsQ0FKRDtBQU1BbkIsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ1AsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ08sVUFBSixHQUFpQixHQUFqQjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLFNBQUosQ0FBYyxVQUFkLEVBQTBCLFdBQTFCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsSUFBSjtBQUNILENBSkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXFdBIHByb2pla3RcXEZpZ3VyaXhcXEJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBkYXRhIGZyb20gJy4vc3RvcmUnO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9kYi5qcydcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydCA9IDQ0NTA7XHJcblxyXG5hcHAudXNlKGNvcnMoKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLypcclxuYXBwLmdldCgnL2dhbGVyaWphJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBsZXQgcG9zdHMgPSBzdG9yYWdlLmdhbGVyaWphO1xyXG4gICAgbGV0IHF1ZXJ5ID0gcmVxLnF1ZXJ5O1xyXG59KVxyXG5cclxuYXBwLmdldCgnZ2FsZXJpamEnLCBhc3luYyhyZXEsIHJlcykgPT4ge1xyXG4gICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcblxyXG4gICAgbGV0IGN1cnNvciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJnYWxlcmlqYVwiKS5maW5kKCkuc29ydCh7cG9zdGVkQXQ6IC0xfSlcclxuICAgIGxldCByZXN1bHRzID0gYXdhaXQgY3Vyc29yLnRvQXJyYXkoKVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdHMpXHJcbn0pXHJcbiovXHJcblxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IGNvbnNvbGUubG9nKGBcXG5cXG5odHRwOi8vbG9jYWxob3N0OiR7cG9ydH0vXFxuXFxuYCkpO1xyXG5hcHAuZ2V0KCcva29yaXNuaWNpJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmtvcmlzbmljaSkpO1xyXG5hcHAuZ2V0KCcvdHVybmlyaScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS50dXJuaXJpKSk7XHJcbmFwcC5nZXQoJy9maWd1cmUnLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEuZmlndXJlKSk7XHJcbmFwcC5nZXQoJy9nYWxlcmlqYScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS5nYWxlcmlqYSkpO1xyXG5cclxuYXBwLnBvc3QoJy9rb3Jpc25pY2knLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xyXG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL2tvcmlzbmljaS91c2VyX25hbWUnKTtcclxuICAgIHJlcy5zZW5kKCk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy90dXJuaXJpJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy90dXJuaXJpJyk7XHJcbiAgICByZXMuc2VuZCgpO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvZmlndXJlJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy9maWd1cmUnKTtcclxuICAgIHJlcy5zZW5kKCk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9nYWxlcmlqYScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcvZ2FsZXJpamEnKTtcclxuICAgIHJlcy5zZW5kKCk7XHJcbn0pO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "get",
        "req",
        "res",
        "data",
        "korisnici",
        "turniri",
        "figure",
        "galerija",
        "post",
        "statusCode",
        "setHeader",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,GAAG,CAACK,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,gCAAoCN,IAApC,WAAN;AAAA,CAAjB;AACAD,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKC,SAAd,CAAd;AAAA,CAAtB;AACAZ,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKE,OAAd,CAAd;AAAA,CAApB;AACAb,GAAG,CAACQ,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKG,MAAd,CAAd;AAAA,CAAnB;AACAd,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACN,IAAJ,CAASO,kBAAKI,QAAd,CAAd;AAAA,CAArB;AAEAf,GAAG,CAACgB,IAAJ,CAAS,YAAT,EAAuB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,sBAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,UAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,SAAT,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,SAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD;AAMAnB,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,SAAJ,CAAc,UAAd,EAA0B,WAA1B;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CAJD",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\nimport connect from './db.js'\r\n\r\nconst app = express();\r\nconst port = 4450;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n/*\r\napp.get('/galerija', async (req, res) => {\r\n    let posts = storage.galerija;\r\n    let query = req.query;\r\n})\r\n\r\napp.get('galerija', async(req, res) => {\r\n    let db = await connect()\r\n\r\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n})\r\n*/\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\napp.get('/korisnici', (req, res) => res.json(data.korisnici));\r\napp.get('/turniri', (req, res) => res.json(data.turniri));\r\napp.get('/figure', (req, res) => res.json(data.figure));\r\napp.get('/galerija', (req, res) => res.json(data.galerija));\r\n\r\napp.post('/korisnici', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/korisnici/user_name');\r\n    res.send();\r\n});\r\n\r\napp.post('/turniri', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/turniri');\r\n    res.send();\r\n});\r\n\r\napp.post('/figure', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/figure');\r\n    res.send();\r\n});\r\n\r\napp.post('/galerija', (req, res) => {\r\n    res.statusCode = 201;\r\n    res.setHeader('Location', '/galerija');\r\n    res.send();\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620732823425
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnicko_ime: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnicko_ime: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29faW1lIiwibG96aW5rYSIsInR1cm5pcmkiLCJkYXR1bSIsInZyaWplbWUiLCJsb2thY2lqYSIsImtyYXRraV9vcGlzIiwiZmlndXJlIiwidXJsX3NsaWtlIiwiZ2FsZXJpamEiLCJuYXNsb3YiLCJvcGlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUc7QUFFUEMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BELElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lFLE1BQUFBLEtBQUssRUFBRSxFQURYO0FBRUlDLE1BQUFBLGNBQWMsRUFBRSxFQUZwQjtBQUdJQyxNQUFBQSxPQUFPLEVBQUU7QUFIYixLQURFO0FBREMsR0FGSjtBQVdQQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEwsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUcsTUFBQUEsY0FBYyxFQUFFLEVBRHBCO0FBRUlHLE1BQUFBLEtBQUssRUFBRSxJQUZYO0FBR0lDLE1BQUFBLE9BQU8sRUFBRSxJQUhiO0FBSUlDLE1BQUFBLFFBQVEsRUFBRSxFQUpkO0FBS0lDLE1BQUFBLFdBQVcsRUFBRTtBQUxqQixLQURFO0FBREQsR0FYRjtBQXNCUEMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pWLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lXLE1BQUFBLFNBQVMsRUFBRTtBQURmLEtBREU7QUFERixHQXRCRDtBQTZCUEMsRUFBQUEsUUFBUSxFQUFFO0FBQ05aLElBQUFBLElBQUksRUFBRSxDQUNGO0FBQ0lhLE1BQUFBLE1BQU0sRUFBRSxFQURaO0FBRUlDLE1BQUFBLElBQUksRUFBRSxFQUZWO0FBR0lILE1BQUFBLFNBQVMsRUFBRTtBQUhmLEtBREU7QUFEQTtBQTdCSCxDQUFYO2VBd0NlWCxJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSmFuXFxEZXNrdG9wXFxXQSBwcm9qZWt0XFxGaWd1cml4XFxCYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImxldCBkYXRhID0ge1xyXG4gICAgXHJcbiAgICBrb3Jpc25pY2k6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGVtYWlsOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAga29yaXNuaWNrb19pbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBsb3ppbmthOiBcIlwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICB9LCBcclxuICAgIHR1cm5pcmk6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGtvcmlzbmlja29faW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgZGF0dW06IG51bGwsXHJcbiAgICAgICAgICAgICAgICB2cmlqZW1lOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgbG9rYWNpamE6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrcmF0a2lfb3BpczogXCJcIixcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBmaWd1cmU6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBnYWxlcmlqYToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFzbG92OiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgb3BpczogXCJcIixcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGRhdGE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnicko_ime",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,cAAc,EAAE,EAFpB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,cAAc,EAAE,EADpB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnicko_ime: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnicko_ime: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620729391065
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\Figurix\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEphblxcRGVza3RvcFxcV0EgcHJvamVrdFxcRmlndXJpeFxcQmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ28gZnJvbSBcIm1vbmdvZGJcIlxyXG5cclxubGV0IGNvbm5lY3Rpb25fc3RyaW5nID0gXCJtb25nb2RiK3NydjovL0ZpZ3VyaVg6cHJvZ3JhbWVyaXN0b2xqZWNhQGNsdXN0ZXIwLmZzbnZzLm1vbmdvZGIubmV0L215Rmlyc3REYXRhYmFzZT9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIjtcclxuXHJcbmxldCBjbGllbnQgPSBuZXcgbW9uZ28uTW9uZ29DbGllbnQoY29ubmVjdGlvbl9zdHJpbmcsIHtcclxuICAgIHVzZXJOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VyVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pXHJcblxyXG5sZXQgZGIgPSBudWxsXHJcblxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT57XHJcblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSl7XHJcbiAgICAgICAgICAgIHJlc29sdmUoZGIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsaWVudC5jb25uZWN0KGVyciA9PiB7XHJcbiAgICAgICAgICAgIGlmKGVycil7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoXCJEb8WhbG8gamUgZG8gZ3JlxaFrZSBwcmlsaWtvbSBzcGFqYW5qYTogXCIgKyBlcnIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVXNwamXFoW5vIHNwYWphbmplIG5hIGJhenVcIilcclxuICAgICAgICAgICAgICAgIGRiID0gY2xpZW50LmRiKFwiZmlndXJpeFwiKVxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\Figurix\\Backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1620730962641
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nrequire('dotenv').config();\n\nvar app = (0, _express[\"default\"])();\nvar port = 4450;\napp.use((0, _cors[\"default\"])()); // omoguciti cors na svim rutama\n\napp.use(_express[\"default\"].json());\n/*\napp.get('/galerija', async (req, res) => {\n    let posts = storage.galerija;\n    let query = req.query;\n})\n\napp.get('galerija', async(req, res) => {\n    let db = await connect()\n\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\n    let results = await cursor.toArray()\n\n    res.json(results)\n})\n*/\n\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\n/* app.get('/korisnici', (req, res) => res.json(data.korisnici));\napp.get('/turniri', (req, res) => res.json(data.turniri));\napp.get('/figure', (req, res) => res.json(data.figure));\napp.get('/galerija', (req, res) => res.json(data.galerija));\n\napp.post('/korisnici', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/korisnici/user_name');\n    res.send();\n});\n\napp.post('/turniri', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/turniri');\n    res.send();\n});\n\napp.post('/figure', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/figure');\n    res.send();\n});\n\napp.post('/galerija', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/galerija');\n    res.send();\n});\n*/\n// unos jednog usera\n\napp.post('/user', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user, id;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = req.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return _auth[\"default\"].registerUser(user);\n\n          case 4:\n            id = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(500).json({\n              error: _context.t0.message\n            });\n\n          case 10:\n            res.json({\n              status: \"Success\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/auth', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var user, korisnickoIme, email, lozinka, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = req.body;\n            korisnickoIme = user.korisnickoIme;\n            email = user.email;\n            lozinka = user.lozinka;\n            _context2.prev = 4;\n            _context2.next = 7;\n            return _auth[\"default\"].authenticateuser(email, lozinka);\n\n          case 7:\n            result = _context2.sent;\n            res.status(201).json(result);\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](4);\n            res.status(500).json({\n              error: _context2.t0.message\n            });\n            console.log(error);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[4, 11]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n/* app.patch(\"/user\" , [auth.verify], async (req, res) =>{\n    let changes = req.body;\n\n    let email = req.jwt.email;\n\n    if(changes.new_password && changes.old_password){\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\n        if(result){\n            res.status(201).send()\n        }\n        else{\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\n        }\n    }\n    else{\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \n    }\n\n})\n\n\napp.listen(port, () => console.log(`Slušam na portu ${port}!`)) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJhcHAiLCJwb3J0IiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwicG9zdCIsInJlcSIsInJlcyIsInVzZXIiLCJib2R5IiwiYXV0aCIsInJlZ2lzdGVyVXNlciIsImlkIiwic3RhdHVzIiwiZXJyb3IiLCJtZXNzYWdlIiwia29yaXNuaWNrb0ltZSIsImVtYWlsIiwibG96aW5rYSIsImF1dGhlbnRpY2F0ZXVzZXIiLCJyZXN1bHQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBQ0FBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBRUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLHVCQUFSLEUsQ0FBaUI7O0FBQ2pCRixHQUFHLENBQUNFLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUosR0FBRyxDQUFDSyxNQUFKLENBQVdKLElBQVgsRUFBaUI7QUFBQSxTQUFNSyxPQUFPLENBQUNDLEdBQVIsZ0NBQW9DTixJQUFwQyxXQUFOO0FBQUEsQ0FBakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUFELEdBQUcsQ0FBQ1EsSUFBSixDQUFTLE9BQVQ7QUFBQSxxRUFBa0IsaUJBQU9DLEdBQVAsRUFBYUMsR0FBYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsWUFBQUEsSUFEVSxHQUNIRixHQUFHLENBQUNHLElBREQ7QUFBQTtBQUFBO0FBQUEsbUJBSUtDLGlCQUFLQyxZQUFMLENBQWtCSCxJQUFsQixDQUpMOztBQUFBO0FBSU5JLFlBQUFBLEVBSk07QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQU9WTCxZQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCWixJQUFoQixDQUFxQjtBQUFDYSxjQUFBQSxLQUFLLEVBQUUsWUFBRUM7QUFBVixhQUFyQjs7QUFQVTtBQVVkUixZQUFBQSxHQUFHLENBQUNOLElBQUosQ0FBUztBQUNMWSxjQUFBQSxNQUFNLEVBQUc7QUFESixhQUFUOztBQVZjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWxCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0JBaEIsR0FBRyxDQUFDUSxJQUFKLENBQVMsT0FBVDtBQUFBLHNFQUFrQixrQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNWQyxZQUFBQSxJQURVLEdBQ0hGLEdBQUcsQ0FBQ0csSUFERDtBQUVWTyxZQUFBQSxhQUZVLEdBRU1SLElBQUksQ0FBQ1EsYUFGWDtBQUdWQyxZQUFBQSxLQUhVLEdBR0ZULElBQUksQ0FBQ1MsS0FISDtBQUlWQyxZQUFBQSxPQUpVLEdBSUFWLElBQUksQ0FBQ1UsT0FKTDtBQUFBO0FBQUE7QUFBQSxtQkFNUVIsaUJBQUtTLGdCQUFMLENBQXNCRixLQUF0QixFQUE2QkMsT0FBN0IsQ0FOUjs7QUFBQTtBQU1QRSxZQUFBQSxNQU5PO0FBT1hiLFlBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JaLElBQWhCLENBQXFCbUIsTUFBckI7QUFQVztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVVWYixZQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCWixJQUFoQixDQUFxQjtBQUFDYSxjQUFBQSxLQUFLLEVBQUUsYUFBRUM7QUFBVixhQUFyQjtBQUNBWixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVUsS0FBWjs7QUFYVTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFsQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcU2xhdmVuXFxPbmVEcml2ZVxcRGVza3RvcFxcZmlndXJpeFxcYmFja2VuZC1tYXN0ZXJcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgZGF0YSBmcm9tICcuL3N0b3JlJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9kYi5qcyc7XG5pbXBvcnQgbW9uZ28gZnJvbSAnbW9uZ29kYic7XG5pbXBvcnQgYXV0aCBmcm9tICcuL2F1dGguanMnO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSA0NDUwO1xuXG5hcHAudXNlKGNvcnMoKSk7IC8vIG9tb2d1Y2l0aSBjb3JzIG5hIHN2aW0gcnV0YW1hXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuLypcbmFwcC5nZXQoJy9nYWxlcmlqYScsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBwb3N0cyA9IHN0b3JhZ2UuZ2FsZXJpamE7XG4gICAgbGV0IHF1ZXJ5ID0gcmVxLnF1ZXJ5O1xufSlcblxuYXBwLmdldCgnZ2FsZXJpamEnLCBhc3luYyhyZXEsIHJlcykgPT4ge1xuICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxuXG4gICAgbGV0IGN1cnNvciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJnYWxlcmlqYVwiKS5maW5kKCkuc29ydCh7cG9zdGVkQXQ6IC0xfSlcbiAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IGN1cnNvci50b0FycmF5KClcblxuICAgIHJlcy5qc29uKHJlc3VsdHMpXG59KVxuKi9cblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgXFxuXFxuaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9L1xcblxcbmApKTtcbi8qIGFwcC5nZXQoJy9rb3Jpc25pY2knLCAocmVxLCByZXMpID0+IHJlcy5qc29uKGRhdGEua29yaXNuaWNpKSk7XG5hcHAuZ2V0KCcvdHVybmlyaScsIChyZXEsIHJlcykgPT4gcmVzLmpzb24oZGF0YS50dXJuaXJpKSk7XG5hcHAuZ2V0KCcvZmlndXJlJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmZpZ3VyZSkpO1xuYXBwLmdldCgnL2dhbGVyaWphJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbihkYXRhLmdhbGVyaWphKSk7XG5cbmFwcC5wb3N0KCcva29yaXNuaWNpJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDE7XG4gICAgcmVzLnNldEhlYWRlcignTG9jYXRpb24nLCAnL2tvcmlzbmljaS91c2VyX25hbWUnKTtcbiAgICByZXMuc2VuZCgpO1xufSk7XG5cbmFwcC5wb3N0KCcvdHVybmlyaScsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy90dXJuaXJpJyk7XG4gICAgcmVzLnNlbmQoKTtcbn0pO1xuXG5hcHAucG9zdCgnL2ZpZ3VyZScsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zdGF0dXNDb2RlID0gMjAxO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgJy9maWd1cmUnKTtcbiAgICByZXMuc2VuZCgpO1xufSk7XG5cbmFwcC5wb3N0KCcvZ2FsZXJpamEnLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc3RhdHVzQ29kZSA9IDIwMTtcbiAgICByZXMuc2V0SGVhZGVyKCdMb2NhdGlvbicsICcvZ2FsZXJpamEnKTtcbiAgICByZXMuc2VuZCgpO1xufSk7XG4qL1xuIFxuLy8gdW5vcyBqZWRub2cgdXNlcmFcblxuYXBwLnBvc3QoJy91c2VyJywgYXN5bmMgKHJlcSAsIHJlcykgPT57XG4gICAgbGV0IHVzZXIgPSByZXEuYm9keTtcblxuICAgIHRyeXtcbiAgICAgICAgbGV0IGlkID0gYXdhaXQgYXV0aC5yZWdpc3RlclVzZXIodXNlcik7XG4gICAgfVxuICAgIGNhdGNoKGUpe1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7ZXJyb3I6IGUubWVzc2FnZX0pO1xuICAgIH1cblxuICAgIHJlcy5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAgXCJTdWNjZXNzXCJcbiAgICB9KVxuXG59KTtcblxuYXBwLnBvc3QoJy9hdXRoJywgYXN5bmMgKHJlcSwgcmVzKSA9PntcbiAgICBsZXQgdXNlciA9IHJlcS5ib2R5O1xuICAgIGxldCBrb3Jpc25pY2tvSW1lID0gdXNlci5rb3Jpc25pY2tvSW1lO1xuICAgIGxldCBlbWFpbCA9IHVzZXIuZW1haWw7XG4gICAgbGV0IGxvemlua2EgPSB1c2VyLmxvemlua2E7XG4gICAgdHJ5e1xuICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhdXRoLmF1dGhlbnRpY2F0ZXVzZXIoZW1haWwsIGxvemlua2EpO1xuICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHJlc3VsdCk7XG4gICAgfVxuICAgIGNhdGNoIChlKXtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe2Vycm9yOiBlLm1lc3NhZ2V9KVxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICB9XG59KVxuXG4vKiBhcHAucGF0Y2goXCIvdXNlclwiICwgW2F1dGgudmVyaWZ5XSwgYXN5bmMgKHJlcSwgcmVzKSA9PntcbiAgICBsZXQgY2hhbmdlcyA9IHJlcS5ib2R5O1xuXG4gICAgbGV0IGVtYWlsID0gcmVxLmp3dC5lbWFpbDtcblxuICAgIGlmKGNoYW5nZXMubmV3X3Bhc3N3b3JkICYmIGNoYW5nZXMub2xkX3Bhc3N3b3JkKXtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGF1dGguY2hhbmdlVXNlclBhc3N3b3JkKGVtYWlsLCBjaGFuZ2VzLm9sZF9wYXNzd29yZCwgY2hhbmdlcy5uZXdfcGFzc3dvcmQpXG4gICAgICAgIGlmKHJlc3VsdCl7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZCgpXG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtlcnJvcjogXCJjYW5ub3QgY2hhbmdlIHBhc3N3b3JkXCJ9KTsgICAgICAgICAgLy9ncmXFoWthIG5hIHNlcnZlcnUgc3RhdHVzIDUwMFxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogXCJrcml2aSB1cGl0XCJ9KTsgICAgIC8va29yaW5payBqZSBwb3NsYW8gbG/FoWUgZGVmaW5pcmFuIHVwaXRuaWsgXG4gICAgfVxuXG59KVxuXG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYFNsdcWhYW0gbmEgcG9ydHUgJHtwb3J0fSFgKSkgKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "port",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "post",
        "req",
        "res",
        "user",
        "body",
        "auth",
        "registerUser",
        "id",
        "status",
        "error",
        "message",
        "korisnickoIme",
        "email",
        "lozinka",
        "authenticateuser",
        "result"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR,E,CAAiB;;AACjBF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,GAAG,CAACK,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,gCAAoCN,IAApC,WAAN;AAAA,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAD,GAAG,CAACQ,IAAJ,CAAS,OAAT;AAAA,qEAAkB,iBAAOC,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,IADU,GACHF,GAAG,CAACG,IADD;AAAA;AAAA;AAAA,mBAIKC,iBAAKC,YAAL,CAAkBH,IAAlB,CAJL;;AAAA;AAINI,YAAAA,EAJM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOVL,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AAACa,cAAAA,KAAK,EAAE,YAAEC;AAAV,aAArB;;AAPU;AAUdR,YAAAA,GAAG,CAACN,IAAJ,CAAS;AACLY,cAAAA,MAAM,EAAG;AADJ,aAAT;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAgBAhB,GAAG,CAACQ,IAAJ,CAAS,OAAT;AAAA,sEAAkB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,IADU,GACHF,GAAG,CAACG,IADD;AAEVO,YAAAA,aAFU,GAEMR,IAAI,CAACQ,aAFX;AAGVC,YAAAA,KAHU,GAGFT,IAAI,CAACS,KAHH;AAIVC,YAAAA,OAJU,GAIAV,IAAI,CAACU,OAJL;AAAA;AAAA;AAAA,mBAMQR,iBAAKS,gBAAL,CAAsBF,KAAtB,EAA6BC,OAA7B,CANR;;AAAA;AAMPE,YAAAA,MANO;AAOXb,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqBmB,MAArB;AAPW;AAAA;;AAAA;AAAA;AAAA;AAUVb,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AAACa,cAAAA,KAAK,EAAE,aAAEC;AAAV,aAArB;AACAZ,YAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "sourcesContent": [
        "import express from 'express';\nimport data from './store';\nimport cors from 'cors';\nimport connect from './db.js';\nimport mongo from 'mongodb';\nimport auth from './auth.js';\nimport dotenv from 'dotenv';\nrequire('dotenv').config();\n\nconst app = express();\nconst port = 4450;\n\napp.use(cors()); // omoguciti cors na svim rutama\napp.use(express.json());\n\n/*\napp.get('/galerija', async (req, res) => {\n    let posts = storage.galerija;\n    let query = req.query;\n})\n\napp.get('galerija', async(req, res) => {\n    let db = await connect()\n\n    let cursor = await db.collection(\"galerija\").find().sort({postedAt: -1})\n    let results = await cursor.toArray()\n\n    res.json(results)\n})\n*/\n\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\n/* app.get('/korisnici', (req, res) => res.json(data.korisnici));\napp.get('/turniri', (req, res) => res.json(data.turniri));\napp.get('/figure', (req, res) => res.json(data.figure));\napp.get('/galerija', (req, res) => res.json(data.galerija));\n\napp.post('/korisnici', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/korisnici/user_name');\n    res.send();\n});\n\napp.post('/turniri', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/turniri');\n    res.send();\n});\n\napp.post('/figure', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/figure');\n    res.send();\n});\n\napp.post('/galerija', (req, res) => {\n    res.statusCode = 201;\n    res.setHeader('Location', '/galerija');\n    res.send();\n});\n*/\n \n// unos jednog usera\n\napp.post('/user', async (req , res) =>{\n    let user = req.body;\n\n    try{\n        let id = await auth.registerUser(user);\n    }\n    catch(e){\n        res.status(500).json({error: e.message});\n    }\n\n    res.json({\n        status:  \"Success\"\n    })\n\n});\n\napp.post('/auth', async (req, res) =>{\n    let user = req.body;\n    let korisnickoIme = user.korisnickoIme;\n    let email = user.email;\n    let lozinka = user.lozinka;\n    try{\n       let result = await auth.authenticateuser(email, lozinka);\n       res.status(201).json(result);\n    }\n    catch (e){\n        res.status(500).json({error: e.message})\n        console.log(error)\n    }\n})\n\n/* app.patch(\"/user\" , [auth.verify], async (req, res) =>{\n    let changes = req.body;\n\n    let email = req.jwt.email;\n\n    if(changes.new_password && changes.old_password){\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\n        if(result){\n            res.status(201).send()\n        }\n        else{\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\n        }\n    }\n    else{\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \n    }\n\n})\n\n\napp.listen(port, () => console.log(`Slušam na portu ${port}!`)) */"
      ]
    },
    "sourceType": "script",
    "mtime": 1621418394937
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnickoIme: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnickoIme: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29JbWUiLCJsb3ppbmthIiwidHVybmlyaSIsImRhdHVtIiwidnJpamVtZSIsImxva2FjaWphIiwia3JhdGtpX29waXMiLCJmaWd1cmUiLCJ1cmxfc2xpa2UiLCJnYWxlcmlqYSIsIm5hc2xvdiIsIm9waXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLElBQUksR0FBRztBQUVQQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEQsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUUsTUFBQUEsS0FBSyxFQUFFLEVBRFg7QUFFSUMsTUFBQUEsYUFBYSxFQUFFLEVBRm5CO0FBR0lDLE1BQUFBLE9BQU8sRUFBRTtBQUhiLEtBREU7QUFEQyxHQUZKO0FBV1BDLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUUsQ0FDRjtBQUNJRyxNQUFBQSxhQUFhLEVBQUUsRUFEbkI7QUFFSUcsTUFBQUEsS0FBSyxFQUFFLElBRlg7QUFHSUMsTUFBQUEsT0FBTyxFQUFFLElBSGI7QUFJSUMsTUFBQUEsUUFBUSxFQUFFLEVBSmQ7QUFLSUMsTUFBQUEsV0FBVyxFQUFFO0FBTGpCLEtBREU7QUFERCxHQVhGO0FBc0JQQyxFQUFBQSxNQUFNLEVBQUU7QUFDSlYsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSVcsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FERTtBQURGLEdBdEJEO0FBNkJQQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlosSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSWEsTUFBQUEsTUFBTSxFQUFFLEVBRFo7QUFFSUMsTUFBQUEsSUFBSSxFQUFFLEVBRlY7QUFHSUgsTUFBQUEsU0FBUyxFQUFFO0FBSGYsS0FERTtBQURBO0FBN0JILENBQVg7ZUF3Q2VYLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTbGF2ZW5cXE9uZURyaXZlXFxEZXNrdG9wXFxmaWd1cml4XFxiYWNrZW5kLW1hc3Rlclxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZGF0YSA9IHtcbiAgICBcbiAgICBrb3Jpc25pY2k6IHtcbiAgICAgICAgZGF0YTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGVtYWlsOiBcIlwiLFxuICAgICAgICAgICAgICAgIGtvcmlzbmlja29JbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgbG96aW5rYTogXCJcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgfSwgXG4gICAgdHVybmlyaToge1xuICAgICAgICBkYXRhOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAga29yaXNuaWNrb0ltZTogXCJcIixcbiAgICAgICAgICAgICAgICBkYXR1bTogbnVsbCxcbiAgICAgICAgICAgICAgICB2cmlqZW1lOiBudWxsLFxuICAgICAgICAgICAgICAgIGxva2FjaWphOiBcIlwiLFxuICAgICAgICAgICAgICAgIGtyYXRraV9vcGlzOiBcIlwiLFxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICBmaWd1cmU6IHtcbiAgICAgICAgZGF0YTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAgZ2FsZXJpamE6IHtcbiAgICAgICAgZGF0YTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hc2xvdjogXCJcIixcbiAgICAgICAgICAgICAgICBvcGlzOiBcIlwiLFxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG5cbn1cbmV4cG9ydCBkZWZhdWx0IGRhdGE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnickoIme",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,aAAa,EAAE,EAFnB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,aAAa,EAAE,EADnB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "sourcesContent": [
        "let data = {\n    \n    korisnici: {\n        data: [\n            {\n                email: \"\",\n                korisnickoIme: \"\",\n                lozinka: \"\",\n            },\n        ],\n    }, \n    turniri: {\n        data: [\n            {\n                korisnickoIme: \"\",\n                datum: null,\n                vrijeme: null,\n                lokacija: \"\",\n                kratki_opis: \"\",\n            }\n        ]\n    },\n    figure: {\n        data: [\n            {\n                url_slike: null,\n            }\n        ]\n    },\n    galerija: {\n        data: [\n            {\n                naslov: \"\",\n                opis: \"\",\n                url_slike: null,\n            }\n        ]\n    },\n\n}\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621418605794
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNsYXZlblxcT25lRHJpdmVcXERlc2t0b3BcXGZpZ3VyaXhcXGJhY2tlbmQtbWFzdGVyXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tIFwibW9uZ29kYlwiXG5cbmxldCBjb25uZWN0aW9uX3N0cmluZyA9IFwibW9uZ29kYitzcnY6Ly9GaWd1cmlYOnByb2dyYW1lcmlzdG9samVjYUBjbHVzdGVyMC5mc252cy5tb25nb2RiLm5ldC9teUZpcnN0RGF0YWJhc2U/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5XCI7XG5cbmxldCBjbGllbnQgPSBuZXcgbW9uZ28uTW9uZ29DbGllbnQoY29ubmVjdGlvbl9zdHJpbmcsIHtcbiAgICB1c2VyTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIHVzZXJVbmlmaWVkVG9wb2xvZ3k6IHRydWVcbn0pXG5cbmxldCBkYiA9IG51bGxcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PntcblxuICAgICAgICBpZiAoZGIgJiYgY2xpZW50LmlzQ29ubmVjdGVkKCkpe1xuICAgICAgICAgICAgcmVzb2x2ZShkYilcbiAgICAgICAgfVxuICAgICAgICBjbGllbnQuY29ubmVjdChlcnIgPT4ge1xuICAgICAgICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgICAgICByZWplY3QoXCJEb8WhbG8gamUgZG8gZ3JlxaFrZSBwcmlsaWtvbSBzcGFqYW5qYTogXCIgKyBlcnIpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVXNwamXFoW5vIHNwYWphbmplIG5hIGJhenVcIilcbiAgICAgICAgICAgICAgICBkYiA9IGNsaWVudC5kYihcImZpZ3VyaXhcIilcbiAgICAgICAgICAgICAgICByZXNvbHZlKGRiKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\n\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n\nlet client = new mongo.MongoClient(connection_string, {\n    userNewUrlParser: true,\n    userUnifiedTopology: true\n})\n\nlet db = null\n\nexport default () => {\n    return new Promise((resolve, reject) =>{\n\n        if (db && client.isConnected()){\n            resolve(db)\n        }\n        client.connect(err => {\n            if(err){\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\n            }\n            else{\n                console.log(\"Uspješno spajanje na bazu\")\n                db = client.db(\"figurix\")\n                resolve(db)\n            }\n        })\n    })\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1621330865000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\\\\src\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\OneDrive\\\\Desktop\\\\figurix\\\\backend-master\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\auth.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.collection(\"user\").createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  registerUser: function registerUser(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var db, doc, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Dobrodošli', userData);\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.t0 = userData.email;\n              _context2.next = 7;\n              return _bcrypt[\"default\"].hash(userData.lozinka, 6);\n\n            case 7:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = userData.korisnickoIme;\n              doc = {\n                email: _context2.t0,\n                lozinka: _context2.t1,\n                korisnickoIme: _context2.t2\n              };\n              _context2.prev = 10;\n              _context2.next = 13;\n              return db.collection(\"user\").insertOne(doc);\n\n            case 13:\n              result = _context2.sent;\n\n              if (!(result && result.inesrtedId)) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", result.insertedId);\n\n            case 16:\n              _context2.next = 24;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t3 = _context2[\"catch\"](10);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 22;\n                break;\n              }\n\n              throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\");\n\n            case 22:\n              console.error(_context2.t3);\n              console.log(error);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 18]]);\n    }))();\n  },\n  authenticateuser: function authenticateuser(email, lozinka) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"user\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.lozinka;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(lozinka, user.lozinka);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 17;\n                break;\n              }\n\n              delete user.lozinka;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              return _context3.abrupt(\"return\", {\n                token: token,\n                email: user.email,\n                lozinka: user.lozinka,\n                korisnickoIme: user.korisnickoIme\n              });\n\n            case 17:\n              throw new Error(\"cannot authenticate\");\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n\n  /* async changeUserPassword(email, old_password, new_password){\r\n      let db = await connect ()\r\n      let user = await db.collection(\"user\").findOne({email: email})\r\n        if(user && user.password && (await bcrypt.compare(old_password, user.password))){\r\n          let new_password_hashed = await bcrypt.hash(new_password, 8)\r\n            let result = await db.collection(\"user\").updateOne(\r\n              {_id: user._id},\r\n              {\r\n                  $set: {\r\n                      password: new_password_hashed\r\n                  }\r\n              }\r\n          )\r\n          return result.modifiedCount == 1\r\n      }\r\n  }, */\n  verify: function verify(req, res, next) {\n    try {\n      var authorization = req.headers.authorization.split(' ');\n      var type = authorization[0];\n      var token = authorization[1];\n\n      if (type !== \"Bearer\") {\n        return res.status(401).send();\n      } else {\n        req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n        return next();\n      }\n    } catch (e) {\n      return res.status(401).send({\n        Error: 'error'\n      });\n    }\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "registerUser",
        "userData",
        "console",
        "log",
        "bcrypt",
        "hash",
        "lozinka",
        "korisnickoIme",
        "doc",
        "insertOne",
        "result",
        "inesrtedId",
        "insertedId",
        "name",
        "code",
        "Error",
        "error",
        "authenticateuser",
        "findOne",
        "user",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "verify",
        "req",
        "res",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "status",
        "send",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,wDAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa,qBADb;;AAAA;AACEA,UAAAA,EADF;AAAA;AAAA,iBAEIA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBC,WAAtB,CAAkC;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAlC,EAA8C;AAACC,YAAAA,MAAM,EAAE;AAAT,WAA9C,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAF;;eAKe;AACNC,EAAAA,YADM,wBACOC,QADP,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,cAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BF,QAA3B;AADuB;AAAA,qBAER,qBAFQ;;AAAA;AAEnBN,cAAAA,EAFmB;AAAA,6BAKZM,QAAQ,CAACH,KALG;AAAA;AAAA,qBAMJM,mBAAOC,IAAP,CAAYJ,QAAQ,CAACK,OAArB,EAA8B,CAA9B,CANI;;AAAA;AAAA;AAAA,6BAOJL,QAAQ,CAACM,aAPL;AAInBC,cAAAA,GAJmB;AAKnBV,gBAAAA,KALmB;AAMnBQ,gBAAAA,OANmB;AAOnBC,gBAAAA,aAPmB;AAAA;AAAA;AAAA;AAAA,qBAUDZ,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBa,SAAtB,CAAgCD,GAAhC,CAVC;;AAAA;AAUhBE,cAAAA,MAVgB;;AAAA,oBAWjBA,MAAM,IAAIA,MAAM,CAACC,UAXA;AAAA;AAAA;AAAA;;AAAA,gDAYTD,MAAM,CAACE,UAZE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAehB,aAAEC,IAAF,IAAU,YAAV,IAA0B,aAAEC,IAAF,IAAU,KAfpB;AAAA;AAAA;AAAA;;AAAA,oBAgBT,IAAIC,KAAJ,CAAU,yBAAyBd,QAAQ,CAACH,KAAlC,GAA0C,cAApD,CAhBS;;AAAA;AAkBpBI,cAAAA,OAAO,CAACc,KAAR;AACAd,cAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB1B,GAvBU;AAyBLC,EAAAA,gBAzBK,4BAyBYnB,KAzBZ,EAyBmBQ,OAzBnB,EAyB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnB,qBADmB;;AAAA;AAC9BX,cAAAA,EAD8B;AAAA;AAAA,qBAEjBA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBsB,OAAtB,CAA8B;AAACpB,gBAAAA,KAAK,EAAEA;AAAR,eAA9B,CAFiB;;AAAA;AAE9BqB,cAAAA,IAF8B;AAAA,6BAG/BA,IAAI,IAAIA,IAAI,CAACb,OAHkB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGAF,mBAAOgB,OAAP,CAAed,OAAf,EAAwBa,IAAI,CAACb,OAA7B,CAHA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI9B,qBAAOa,IAAI,CAACb,OAAZ;AACIe,cAAAA,KAL0B,GAKlBC,yBAAIC,IAAJ,CAASJ,IAAT,EAAeK,OAAO,CAACC,GAAR,CAAYC,UAA3B,EAAuC;AAC/CC,gBAAAA,SAAS,EAAG,OADmC;AAE/CC,gBAAAA,SAAS,EAAE;AAFoC,eAAvC,CALkB;AAAA,gDASxB;AACHP,gBAAAA,KAAK,EAALA,KADG;AAEHvB,gBAAAA,KAAK,EAACqB,IAAI,CAACrB,KAFR;AAGHQ,gBAAAA,OAAO,EAACa,IAAI,CAACb,OAHV;AAIHC,gBAAAA,aAAa,EAAEY,IAAI,CAACZ;AAJjB,eATwB;;AAAA;AAAA,oBAiBxB,IAAIQ,KAAJ,CAAU,qBAAV,CAjBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBrC,GA5CU;;AA8CX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIIc,EAAAA,MAjEW,kBAiEJC,GAjEI,EAiECC,GAjED,EAiEMC,IAjEN,EAiEW;AAClB,QAAG;AACC,UAAIC,aAAa,GAAGH,GAAG,CAACI,OAAJ,CAAYD,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,CAApB;AACA,UAAIC,IAAI,GAAGH,aAAa,CAAC,CAAD,CAAxB;AACA,UAAIZ,KAAK,GAAGY,aAAa,CAAC,CAAD,CAAzB;;AACA,UAAGG,IAAI,KAAK,QAAZ,EAAqB;AACjB,eAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH,OAFD,MAGI;AACJR,QAAAA,GAAG,CAACR,GAAJ,GAASA,yBAAIO,MAAJ,CAAWR,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAT;AACA,eAAOM,IAAI,EAAX;AACC;AACJ,KAXD,CAYA,OAAMO,CAAN,EAAQ;AACL,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACvB,QAAAA,KAAK,EAAE;AAAR,OAArB,CAAP;AAEF;AACJ;AAlFU,C",
      "sourceRoot": "C:\\Users\\Slaven\\OneDrive\\Desktop\\figurix\\backend-master\\src\\",
      "sourcesContent": [
        "import mongo from 'mongodb';\r\nimport connect from './db.js';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n( async () =>{\r\nlet db = await connect();\r\nawait db.collection(\"user\").createIndex({email: 1}, {unique: true});\r\n})();\r\n\r\nexport default {\r\n   async registerUser(userData){\r\n        console.log( 'Dobrodošli', userData);\r\n        let db = await connect();\r\n\r\n        let doc = {\r\n            email: userData.email,\r\n            lozinka: await bcrypt.hash(userData.lozinka, 6),\r\n            korisnickoIme: userData.korisnickoIme,\r\n        };\r\n        try {\r\n           let result = await db.collection(\"user\").insertOne(doc);\r\n           if(result && result.inesrtedId)\r\n               return result.insertedId; \r\n        }\r\n        catch(e){\r\n            if(e.name == \"MongoError\" && e.code == 11000){\r\n                throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\")\r\n            }\r\n           console.error(e);\r\n           console.log(error)\r\n        }\r\n\r\n    },\r\n    \r\n    async authenticateuser(email, lozinka){\r\n        let db = await connect()\r\n        let user = await db.collection(\"user\").findOne({email: email})\r\n        if(user && user.lozinka && (await bcrypt.compare(lozinka, user.lozinka))){\r\n            delete user.lozinka\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm : \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            }) \r\n            return{\r\n               token,\r\n               email:user.email,\r\n               lozinka:user.lozinka,\r\n               korisnickoIme: user.korisnickoIme,\r\n            }\r\n        }\r\n        else{\r\n            throw new Error(\"cannot authenticate\")\r\n        }\r\n    },\r\n    \r\n    /* async changeUserPassword(email, old_password, new_password){\r\n        let db = await connect ()\r\n        let user = await db.collection(\"user\").findOne({email: email})\r\n\r\n        if(user && user.password && (await bcrypt.compare(old_password, user.password))){\r\n            let new_password_hashed = await bcrypt.hash(new_password, 8)\r\n\r\n            let result = await db.collection(\"user\").updateOne(\r\n                {_id: user._id},\r\n                {\r\n                    $set: {\r\n                        password: new_password_hashed\r\n                    }\r\n                }\r\n            )\r\n            return result.modifiedCount == 1\r\n        }\r\n    }, */\r\n\r\n    verify(req, res, next){\r\n        try{\r\n            let authorization = req.headers.authorization.split(' ');\r\n            let type = authorization[0];\r\n            let token = authorization[1]\r\n            if(type !== \"Bearer\"){\r\n                return res.status(401).send();\r\n            }\r\n            else{\r\n            req.jwt =jwt.verify(token, process.env.JWT_SECRET);\r\n            return next()\r\n            }\r\n        }\r\n        catch(e){\r\n           return res.status(401).send({Error: 'error'});\r\n\r\n        }\r\n    }\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1621417996388
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nrequire('dotenv').config();\n\nvar app = (0, _express[\"default\"])();\nvar port = 3000;\napp.use((0, _cors[\"default\"])()); // omoguciti cors na svim rutama\n\napp.use(_express[\"default\"].json());\napp.get('/tajna', function (req, res) {\n  var ok = _auth[\"default\"].verify(req, res);\n\n  if (!ok) {\n    return;\n  }\n\n  res.json({\n    message: 'Ovo je tajna ' + req.jwt.email\n  });\n});\napp.get('/galerija', function (req, res) {\n  res.send(\"rendom okej\");\n});\napp.post('/registracija', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var db, podaci, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context.sent;\n            podaci = req.body;\n            _context.next = 6;\n            return db.collection('user').insertOne(podaci);\n\n          case 6:\n            result = _context.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/registracija', function (req, res) {\n  var podaci = req.body;\n  res.send(podaci);\n});\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.post('/user', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var user, _id;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = req.body;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _auth[\"default\"].registerUser(user);\n\n          case 4:\n            _id = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              error: _context2.t0.message\n            });\n\n          case 10:\n            res.json({\n              status: \"Success\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 7]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/auth', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var user, email, lozinka, result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            user = req.body;\n            email = user.email;\n            lozinka = user.lozinka;\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _auth[\"default\"].authenticateuser(email, lozinka);\n\n          case 6:\n            result = _context3.sent;\n            res.json(result);\n            res.status(201).json(result);\n            _context3.next = 15;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            res.status(500).json({\n              error: _context3.t0.message\n            });\n            console.log(error);\n\n          case 15:\n            res.json({\n              id: id\n            });\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 11]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\n\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJhcHAiLCJwb3J0IiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJvayIsImF1dGgiLCJ2ZXJpZnkiLCJtZXNzYWdlIiwiand0IiwiZW1haWwiLCJzZW5kIiwicG9zdCIsImRiIiwicG9kYWNpIiwiYm9keSIsImNvbGxlY3Rpb24iLCJpbnNlcnRPbmUiLCJyZXN1bHQiLCJpbnNlcnRlZENvdW50Iiwic3RhdHVzIiwiaWQiLCJpbnNlcnRlZElkIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsInVzZXIiLCJyZWdpc3RlclVzZXIiLCJlcnJvciIsImxvemlua2EiLCJhdXRoZW50aWNhdGV1c2VyIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUdBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFDQSxJQUFNQyxJQUFJLEdBQUcsSUFBYjtBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUSx1QkFBUixFLENBQWlCOztBQUNqQkYsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUN6QixNQUFJQyxFQUFFLEdBQUdDLGlCQUFLQyxNQUFMLENBQVlKLEdBQVosRUFBZ0JDLEdBQWhCLENBQVQ7O0FBQ0EsTUFBSSxDQUFDQyxFQUFMLEVBQVE7QUFDSjtBQUNIOztBQUNERCxFQUFBQSxHQUFHLENBQUNILElBQUosQ0FBUztBQUFDTyxJQUFBQSxPQUFPLEVBQUUsa0JBQWtCTCxHQUFHLENBQUNNLEdBQUosQ0FBUUM7QUFBcEMsR0FBVDtBQUNILENBTkQ7QUFRQWIsR0FBRyxDQUFDSyxHQUFKLENBQVEsV0FBUixFQUFzQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVMsYUFBVDtBQUVELENBSEg7QUFNRWQsR0FBRyxDQUFDZSxJQUFKLENBQVMsZUFBVDtBQUFBLHFFQUEwQixpQkFBT1QsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1QscUJBRFM7O0FBQUE7QUFDcEJTLFlBQUFBLEVBRG9CO0FBRXBCQyxZQUFBQSxNQUZvQixHQUVYWCxHQUFHLENBQUNZLElBRk87QUFBQTtBQUFBLG1CQUdMRixFQUFFLENBQUNHLFVBQUgsQ0FBYyxNQUFkLEVBQXNCQyxTQUF0QixDQUFnQ0gsTUFBaEMsQ0FISzs7QUFBQTtBQUdwQkksWUFBQUEsTUFIb0I7O0FBSXhCLGdCQUFJQSxNQUFNLENBQUNDLGFBQVAsSUFBd0IsQ0FBNUIsRUFBK0I7QUFDM0JmLGNBQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTO0FBQ0xTLGdCQUFBQSxNQUFNLEVBQUUsU0FESDtBQUVMQyxnQkFBQUEsRUFBRSxFQUFFSCxNQUFNLENBQUNJO0FBRk4sZUFBVDtBQUlILGFBTEQsTUFNSztBQUNEbEIsY0FBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDTFMsZ0JBQUFBLE1BQU0sRUFBRTtBQURILGVBQVQ7QUFHSDs7QUFkdUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBMUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFpQkZ2QixHQUFHLENBQUNLLEdBQUosQ0FBUSxlQUFSLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3BDLE1BQUlVLE1BQU0sR0FBR1gsR0FBRyxDQUFDWSxJQUFqQjtBQUVBWCxFQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBU0csTUFBVDtBQUNILENBSkQ7QUFPQWpCLEdBQUcsQ0FBQzBCLE1BQUosQ0FBV3pCLElBQVgsRUFBaUI7QUFBQSxTQUFNMEIsT0FBTyxDQUFDQyxHQUFSLGdDQUFvQzNCLElBQXBDLFdBQU47QUFBQSxDQUFqQjtBQUdBRCxHQUFHLENBQUNlLElBQUosQ0FBUyxPQUFUO0FBQUEsc0VBQWtCLGtCQUFPVCxHQUFQLEVBQWFDLEdBQWI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNWc0IsWUFBQUEsSUFEVSxHQUNIdkIsR0FBRyxDQUFDWSxJQUREO0FBQUE7QUFBQTtBQUFBLG1CQUlLVCxpQkFBS3FCLFlBQUwsQ0FBa0JELElBQWxCLENBSkw7O0FBQUE7QUFJTkwsWUFBQUEsR0FKTTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBT1ZqQixZQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVcsR0FBWCxFQUFnQm5CLElBQWhCLENBQXFCO0FBQUMyQixjQUFBQSxLQUFLLEVBQUUsYUFBRXBCO0FBQVYsYUFBckI7O0FBUFU7QUFVZEosWUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFDTG1CLGNBQUFBLE1BQU0sRUFBRztBQURKLGFBQVQ7O0FBVmM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBbEI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFpQkF2QixHQUFHLENBQUNlLElBQUosQ0FBUyxPQUFUO0FBQUEsc0VBQWtCLGtCQUFPVCxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVZzQixZQUFBQSxJQUZVLEdBRUh2QixHQUFHLENBQUNZLElBRkQ7QUFHVkwsWUFBQUEsS0FIVSxHQUdGZ0IsSUFBSSxDQUFDaEIsS0FISDtBQUlWbUIsWUFBQUEsT0FKVSxHQUlBSCxJQUFJLENBQUNHLE9BSkw7QUFBQTtBQUFBO0FBQUEsbUJBTVF2QixpQkFBS3dCLGdCQUFMLENBQXNCcEIsS0FBdEIsRUFBNkJtQixPQUE3QixDQU5SOztBQUFBO0FBTVBYLFlBQUFBLE1BTk87QUFPWGQsWUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVNpQixNQUFUO0FBQ0FkLFlBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVyxHQUFYLEVBQWdCbkIsSUFBaEIsQ0FBcUJpQixNQUFyQjtBQVJXO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBV1ZkLFlBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVyxHQUFYLEVBQWdCbkIsSUFBaEIsQ0FBcUI7QUFBQzJCLGNBQUFBLEtBQUssRUFBRSxhQUFFcEI7QUFBVixhQUFyQjtBQUNBZ0IsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlHLEtBQVo7O0FBWlU7QUFjZHhCLFlBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQUNvQixjQUFBQSxFQUFFLEVBQUNBO0FBQUosYUFBVDs7QUFkYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFsQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXFdBIHByb2pla3RcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBleHByZXNzLCB7IHJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBkYXRhIGZyb20gJy4vc3RvcmUnO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9kYi5qcyc7XHJcbmltcG9ydCBtb25nbyBmcm9tICdtb25nb2RiJztcclxuaW1wb3J0IGF1dGggZnJvbSAnLi9hdXRoLmpzJztcclxuXHJcblxyXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydCA9IDMwMDA7XHJcblxyXG5hcHAudXNlKGNvcnMoKSk7IC8vIG9tb2d1Y2l0aSBjb3JzIG5hIHN2aW0gcnV0YW1hXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuYXBwLmdldCgnL3Rham5hJywgKHJlcSxyZXMpPT57XHJcbiAgICBsZXQgb2sgPSBhdXRoLnZlcmlmeShyZXEscmVzKTtcclxuICAgIGlmICghb2spe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHJlcy5qc29uKHttZXNzYWdlOiAnT3ZvIGplIHRham5hICcgKyByZXEuand0LmVtYWlsfSk7XHJcbn0pXHJcblxyXG5hcHAuZ2V0KCcvZ2FsZXJpamEnLCAgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZChcInJlbmRvbSBva2VqXCIpXHJcbiAgXHJcbiAgfSlcclxuICBcclxuXHJcbiAgYXBwLnBvc3QoJy9yZWdpc3RyYWNpamEnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcclxuICAgIGxldCBwb2RhY2kgPSByZXEuYm9keTtcclxuICAgIGxldCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd1c2VyJykuaW5zZXJ0T25lKHBvZGFjaSk7XHJcbiAgICBpZiAocmVzdWx0Lmluc2VydGVkQ291bnQgPT0gMSkge1xyXG4gICAgICAgIHJlcy5zZW5kKHtcclxuICAgICAgICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICAgICAgICAgIGlkOiByZXN1bHQuaW5zZXJ0ZWRJZCxcclxuICAgICAgICB9KTtcclxuICAgIH0gXHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXMuc2VuZCh7XHJcbiAgICAgICAgICAgIHN0YXR1czogJ2ZhaWwnLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmFwcC5nZXQoJy9yZWdpc3RyYWNpamEnLCAgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBsZXQgcG9kYWNpID0gcmVxLmJvZHk7IFxyXG5cclxuICAgIHJlcy5zZW5kKHBvZGFjaSk7XHJcbn0pXHJcblxyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgXFxuXFxuaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9L1xcblxcbmApKTtcclxuXHJcblxyXG5hcHAucG9zdCgnL3VzZXInLCBhc3luYyAocmVxICwgcmVzKSA9PntcclxuICAgIGxldCB1c2VyID0gcmVxLmJvZHk7XHJcblxyXG4gICAgdHJ5e1xyXG4gICAgICAgIGxldCBpZCA9IGF3YWl0IGF1dGgucmVnaXN0ZXJVc2VyKHVzZXIpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2goZSl7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe2Vycm9yOiBlLm1lc3NhZ2V9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXMuanNvbih7XHJcbiAgICAgICAgc3RhdHVzOiAgXCJTdWNjZXNzXCJcclxuICAgIH0pXHJcblxyXG59KTtcclxuXHJcblxyXG5hcHAucG9zdCgnL2F1dGgnLCBhc3luYyAocmVxLCByZXMpID0+e1xyXG5cclxuICAgIGxldCB1c2VyID0gcmVxLmJvZHk7XHJcbiAgICBsZXQgZW1haWwgPSB1c2VyLmVtYWlsO1xyXG4gICAgbGV0IGxvemlua2EgPSB1c2VyLmxvemlua2E7XHJcbiAgICB0cnl7XHJcbiAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXV0aC5hdXRoZW50aWNhdGV1c2VyKGVtYWlsLCBsb3ppbmthKTtcclxuICAgICAgIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICAgICByZXMuc3RhdHVzKDIwMSkuanNvbihyZXN1bHQpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpe1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtlcnJvcjogZS5tZXNzYWdlfSlcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgIH1cclxuICAgIHJlcy5qc29uKHtpZDppZH0pO1xyXG59KVxyXG4vKlxyXG4gYXBwLnBhdGNoKFwiL3VzZXJcIiAsIFthdXRoLnZlcmlmeV0sIGFzeW5jIChyZXEsIHJlcykgPT57XHJcbiAgICBsZXQgY2hhbmdlcyA9IHJlcS5ib2R5O1xyXG5cclxuICAgIGxldCBlbWFpbCA9IHJlcS5qd3QuZW1haWw7XHJcblxyXG4gICAgaWYoY2hhbmdlcy5uZXdfcGFzc3dvcmQgJiYgY2hhbmdlcy5vbGRfcGFzc3dvcmQpe1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhdXRoLmNoYW5nZVVzZXJQYXNzd29yZChlbWFpbCwgY2hhbmdlcy5vbGRfcGFzc3dvcmQsIGNoYW5nZXMubmV3X3Bhc3N3b3JkKVxyXG4gICAgICAgIGlmKHJlc3VsdCl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKClcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe2Vycm9yOiBcImNhbm5vdCBjaGFuZ2UgcGFzc3dvcmRcIn0pOyAgICAgICAgICAvL2dyZcWha2EgbmEgc2VydmVydSBzdGF0dXMgNTAwXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZXtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7ZXJyb3I6IFwia3JpdmkgdXBpdFwifSk7ICAgICAvL2tvcmluaWsgamUgcG9zbGFvIGxvxaFlIGRlZmluaXJhbiB1cGl0bmlrIFxyXG4gICAgfVxyXG5cclxufSlcclxuKi9cclxuXHJcbi8qYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2x1xaFhbSBuYSBwb3J0dSAke3BvcnR9IWApKSAqLyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "port",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "ok",
        "auth",
        "verify",
        "message",
        "jwt",
        "email",
        "send",
        "post",
        "db",
        "podaci",
        "body",
        "collection",
        "insertOne",
        "result",
        "insertedCount",
        "status",
        "id",
        "insertedId",
        "listen",
        "console",
        "log",
        "user",
        "registerUser",
        "error",
        "lozinka",
        "authenticateuser"
      ],
      "mappings": ";;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR,E,CAAiB;;AACjBF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAKC,GAAL,EAAW;AACzB,MAAIC,EAAE,GAAGC,iBAAKC,MAAL,CAAYJ,GAAZ,EAAgBC,GAAhB,CAAT;;AACA,MAAI,CAACC,EAAL,EAAQ;AACJ;AACH;;AACDD,EAAAA,GAAG,CAACH,IAAJ,CAAS;AAACO,IAAAA,OAAO,EAAE,kBAAkBL,GAAG,CAACM,GAAJ,CAAQC;AAApC,GAAT;AACH,CAND;AAQAb,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,IAAJ,CAAS,aAAT;AAED,CAHH;AAMEd,GAAG,CAACe,IAAJ,CAAS,eAAT;AAAA,qEAA0B,iBAAOT,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,qBADS;;AAAA;AACpBS,YAAAA,EADoB;AAEpBC,YAAAA,MAFoB,GAEXX,GAAG,CAACY,IAFO;AAAA;AAAA,mBAGLF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgCH,MAAhC,CAHK;;AAAA;AAGpBI,YAAAA,MAHoB;;AAIxB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3Bf,cAAAA,GAAG,CAACO,IAAJ,CAAS;AACLS,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEH,MAAM,CAACI;AAFN,eAAT;AAIH,aALD,MAMK;AACDlB,cAAAA,GAAG,CAACO,IAAJ,CAAS;AACLS,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AAiBFvB,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAIU,MAAM,GAAGX,GAAG,CAACY,IAAjB;AAEAX,EAAAA,GAAG,CAACO,IAAJ,CAASG,MAAT;AACH,CAJD;AAOAjB,GAAG,CAAC0B,MAAJ,CAAWzB,IAAX,EAAiB;AAAA,SAAM0B,OAAO,CAACC,GAAR,gCAAoC3B,IAApC,WAAN;AAAA,CAAjB;AAGAD,GAAG,CAACe,IAAJ,CAAS,OAAT;AAAA,sEAAkB,kBAAOT,GAAP,EAAaC,GAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVsB,YAAAA,IADU,GACHvB,GAAG,CAACY,IADD;AAAA;AAAA;AAAA,mBAIKT,iBAAKqB,YAAL,CAAkBD,IAAlB,CAJL;;AAAA;AAINL,YAAAA,GAJM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOVjB,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB;AAAC2B,cAAAA,KAAK,EAAE,aAAEpB;AAAV,aAArB;;AAPU;AAUdJ,YAAAA,GAAG,CAACH,IAAJ,CAAS;AACLmB,cAAAA,MAAM,EAAG;AADJ,aAAT;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiBAvB,GAAG,CAACe,IAAJ,CAAS,OAAT;AAAA,sEAAkB,kBAAOT,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVsB,YAAAA,IAFU,GAEHvB,GAAG,CAACY,IAFD;AAGVL,YAAAA,KAHU,GAGFgB,IAAI,CAAChB,KAHH;AAIVmB,YAAAA,OAJU,GAIAH,IAAI,CAACG,OAJL;AAAA;AAAA;AAAA,mBAMQvB,iBAAKwB,gBAAL,CAAsBpB,KAAtB,EAA6BmB,OAA7B,CANR;;AAAA;AAMPX,YAAAA,MANO;AAOXd,YAAAA,GAAG,CAACH,IAAJ,CAASiB,MAAT;AACAd,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqBiB,MAArB;AARW;AAAA;;AAAA;AAAA;AAAA;AAWVd,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB;AAAC2B,cAAAA,KAAK,EAAE,aAAEpB;AAAV,aAArB;AACAgB,YAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;;AAZU;AAcdxB,YAAAA,GAAG,CAACH,IAAJ,CAAS;AAACoB,cAAAA,EAAE,EAACA;AAAJ,aAAT;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "sourcesContent": [
        "\r\nimport express, { response } from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\nimport connect from './db.js';\r\nimport mongo from 'mongodb';\r\nimport auth from './auth.js';\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.use(cors()); // omoguciti cors na svim rutama\r\napp.use(express.json());\r\n\r\napp.get('/tajna', (req,res)=>{\r\n    let ok = auth.verify(req,res);\r\n    if (!ok){\r\n        return;\r\n    }\r\n    res.json({message: 'Ovo je tajna ' + req.jwt.email});\r\n})\r\n\r\napp.get('/galerija',  (req, res) => {\r\n    res.send(\"rendom okej\")\r\n  \r\n  })\r\n  \r\n\r\n  app.post('/registracija', async (req, res) => {\r\n    let db = await connect();\r\n    let podaci = req.body;\r\n    let result = await db.collection('user').insertOne(podaci);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n});\r\n\r\napp.get('/registracija',  (req, res) => {\r\n    let podaci = req.body; \r\n\r\n    res.send(podaci);\r\n})\r\n\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\n\r\n\r\napp.post('/user', async (req , res) =>{\r\n    let user = req.body;\r\n\r\n    try{\r\n        let id = await auth.registerUser(user);\r\n    }\r\n    catch(e){\r\n        res.status(500).json({error: e.message});\r\n    }\r\n\r\n    res.json({\r\n        status:  \"Success\"\r\n    })\r\n\r\n});\r\n\r\n\r\napp.post('/auth', async (req, res) =>{\r\n\r\n    let user = req.body;\r\n    let email = user.email;\r\n    let lozinka = user.lozinka;\r\n    try{\r\n       let result = await auth.authenticateuser(email, lozinka);\r\n       res.json(result);\r\n       res.status(201).json(result);\r\n    }\r\n    catch (e){\r\n        res.status(500).json({error: e.message})\r\n        console.log(error)\r\n    }\r\n    res.json({id:id});\r\n})\r\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\r\n\r\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */"
      ]
    },
    "sourceType": "script",
    "mtime": 1622118644153
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnickoIme: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnickoIme: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29JbWUiLCJsb3ppbmthIiwidHVybmlyaSIsImRhdHVtIiwidnJpamVtZSIsImxva2FjaWphIiwia3JhdGtpX29waXMiLCJmaWd1cmUiLCJ1cmxfc2xpa2UiLCJnYWxlcmlqYSIsIm5hc2xvdiIsIm9waXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLElBQUksR0FBRztBQUVQQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEQsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUUsTUFBQUEsS0FBSyxFQUFFLEVBRFg7QUFFSUMsTUFBQUEsYUFBYSxFQUFFLEVBRm5CO0FBR0lDLE1BQUFBLE9BQU8sRUFBRTtBQUhiLEtBREU7QUFEQyxHQUZKO0FBV1BDLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUUsQ0FDRjtBQUNJRyxNQUFBQSxhQUFhLEVBQUUsRUFEbkI7QUFFSUcsTUFBQUEsS0FBSyxFQUFFLElBRlg7QUFHSUMsTUFBQUEsT0FBTyxFQUFFLElBSGI7QUFJSUMsTUFBQUEsUUFBUSxFQUFFLEVBSmQ7QUFLSUMsTUFBQUEsV0FBVyxFQUFFO0FBTGpCLEtBREU7QUFERCxHQVhGO0FBc0JQQyxFQUFBQSxNQUFNLEVBQUU7QUFDSlYsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSVcsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FERTtBQURGLEdBdEJEO0FBNkJQQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlosSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSWEsTUFBQUEsTUFBTSxFQUFFLEVBRFo7QUFFSUMsTUFBQUEsSUFBSSxFQUFFLEVBRlY7QUFHSUgsTUFBQUEsU0FBUyxFQUFFO0FBSGYsS0FERTtBQURBO0FBN0JILENBQVg7ZUF3Q2VYLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXFdBIHByb2pla3RcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGRhdGEgPSB7XHJcbiAgICBcclxuICAgIGtvcmlzbmljaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZW1haWw6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvSW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgbG96aW5rYTogXCJcIixcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgfSwgXHJcbiAgICB0dXJuaXJpOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvSW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgZGF0dW06IG51bGwsXHJcbiAgICAgICAgICAgICAgICB2cmlqZW1lOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgbG9rYWNpamE6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrcmF0a2lfb3BpczogXCJcIixcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBmaWd1cmU6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBnYWxlcmlqYToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFzbG92OiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgb3BpczogXCJcIixcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGRhdGE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnickoIme",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,aAAa,EAAE,EAFnB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,aAAa,EAAE,EADnB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnickoIme: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnickoIme: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621849848975
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEphblxcRGVza3RvcFxcV0EgcHJvamVrdFxcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ28gZnJvbSBcIm1vbmdvZGJcIlxyXG5cclxubGV0IGNvbm5lY3Rpb25fc3RyaW5nID0gXCJtb25nb2RiK3NydjovL0ZpZ3VyaVg6cHJvZ3JhbWVyaXN0b2xqZWNhQGNsdXN0ZXIwLmZzbnZzLm1vbmdvZGIubmV0L215Rmlyc3REYXRhYmFzZT9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIjtcclxuXHJcbmxldCBjbGllbnQgPSBuZXcgbW9uZ28uTW9uZ29DbGllbnQoY29ubmVjdGlvbl9zdHJpbmcsIHtcclxuICAgIHVzZXJOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VyVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pXHJcblxyXG5sZXQgZGIgPSBudWxsXHJcblxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT57XHJcblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSl7XHJcbiAgICAgICAgICAgIHJlc29sdmUoZGIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsaWVudC5jb25uZWN0KGVyciA9PiB7XHJcbiAgICAgICAgICAgIGlmKGVycil7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoXCJEb8WhbG8gamUgZG8gZ3JlxaFrZSBwcmlsaWtvbSBzcGFqYW5qYTogXCIgKyBlcnIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVXNwamXFoW5vIHNwYWphbmplIG5hIGJhenVcIilcclxuICAgICAgICAgICAgICAgIGRiID0gY2xpZW50LmRiKFwiZmlndXJpeFwiKVxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1621849848974
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\\\\src\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\WA projekt\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\auth.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.collection(\"user\").createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  registerUser: function registerUser(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var db, doc, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Dobrodošli', userData);\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.t0 = userData.email;\n              _context2.next = 7;\n              return _bcrypt[\"default\"].hash(userData.lozinka, 6);\n\n            case 7:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = userData.korisnickoIme;\n              doc = {\n                email: _context2.t0,\n                lozinka: _context2.t1,\n                korisnickoIme: _context2.t2\n              };\n              _context2.prev = 10;\n              _context2.next = 13;\n              return db.collection(\"user\").insertOne(doc);\n\n            case 13:\n              result = _context2.sent;\n\n              if (!(result && result.inesrtedId)) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", result.insertedId);\n\n            case 16:\n              _context2.next = 24;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t3 = _context2[\"catch\"](10);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 22;\n                break;\n              }\n\n              throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\");\n\n            case 22:\n              console.error(_context2.t3);\n              console.log(error);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 18]]);\n    }))();\n  },\n  authenticateuser: function authenticateuser(email, lozinka) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"user\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              console.log(\"++++++++\" + lozinka);\n              console.log(\"++++++++\" + user);\n\n              if (!_bcrypt[\"default\"].compare(lozinka, user.lozinka)) {\n                _context3.next = 15;\n                break;\n              }\n\n              console.log(\"---------\");\n              delete user.lozinka;\n              token = _jsonwebtoken[\"default\"].sign(user, \"tajna\", {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              return _context3.abrupt(\"return\", {\n                token: token,\n                email: user.email\n              });\n\n            case 15:\n              throw new Error(\"cannot authenticate\");\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  verify: function verify(req, res) {\n    try {\n      var authorization = req.headers.authorization.split(' ');\n      var type = authorization[0];\n      var token = authorization[1];\n\n      if (type !== \"Bearer\") {\n        res.status(401).send();\n        return false;\n      } else {\n        req.jwt = _jsonwebtoken[\"default\"].verify(token, 'tajna'\n        /*process.env.JWT_SECRET*/\n        );\n        return true;\n      }\n    } catch (e) {\n      return res.status(401).send({\n        Error: 'error'\n      });\n    }\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZGIiLCJjb2xsZWN0aW9uIiwiY3JlYXRlSW5kZXgiLCJlbWFpbCIsInVuaXF1ZSIsInJlZ2lzdGVyVXNlciIsInVzZXJEYXRhIiwiY29uc29sZSIsImxvZyIsImJjcnlwdCIsImhhc2giLCJsb3ppbmthIiwia29yaXNuaWNrb0ltZSIsImRvYyIsImluc2VydE9uZSIsInJlc3VsdCIsImluZXNydGVkSWQiLCJpbnNlcnRlZElkIiwibmFtZSIsImNvZGUiLCJFcnJvciIsImVycm9yIiwiYXV0aGVudGljYXRldXNlciIsImZpbmRPbmUiLCJ1c2VyIiwiY29tcGFyZSIsInRva2VuIiwiand0Iiwic2lnbiIsImFsZ29yaXRobSIsImV4cGlyZXNJbiIsInZlcmlmeSIsInJlcSIsInJlcyIsImF1dGhvcml6YXRpb24iLCJoZWFkZXJzIiwic3BsaXQiLCJ0eXBlIiwic3RhdHVzIiwic2VuZCIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSx3REFBRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUNhLHFCQURiOztBQUFBO0FBQ0VBLFVBQUFBLEVBREY7QUFBQTtBQUFBLGlCQUVJQSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxNQUFkLEVBQXNCQyxXQUF0QixDQUFrQztBQUFDQyxZQUFBQSxLQUFLLEVBQUU7QUFBUixXQUFsQyxFQUE4QztBQUFDQyxZQUFBQSxNQUFNLEVBQUU7QUFBVCxXQUE5QyxDQUZKOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQUY7O2VBS2U7QUFDTkMsRUFBQUEsWUFETSx3QkFDT0MsUUFEUCxFQUNnQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN2QkMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsWUFBYixFQUEyQkYsUUFBM0I7QUFEdUI7QUFBQSxxQkFFUixxQkFGUTs7QUFBQTtBQUVuQk4sY0FBQUEsRUFGbUI7QUFBQSw2QkFLWk0sUUFBUSxDQUFDSCxLQUxHO0FBQUE7QUFBQSxxQkFNSk0sbUJBQU9DLElBQVAsQ0FBWUosUUFBUSxDQUFDSyxPQUFyQixFQUE4QixDQUE5QixDQU5JOztBQUFBO0FBQUE7QUFBQSw2QkFPSkwsUUFBUSxDQUFDTSxhQVBMO0FBSW5CQyxjQUFBQSxHQUptQjtBQUtuQlYsZ0JBQUFBLEtBTG1CO0FBTW5CUSxnQkFBQUEsT0FObUI7QUFPbkJDLGdCQUFBQSxhQVBtQjtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQVVEWixFQUFFLENBQUNDLFVBQUgsQ0FBYyxNQUFkLEVBQXNCYSxTQUF0QixDQUFnQ0QsR0FBaEMsQ0FWQzs7QUFBQTtBQVVoQkUsY0FBQUEsTUFWZ0I7O0FBQUEsb0JBV2pCQSxNQUFNLElBQUlBLE1BQU0sQ0FBQ0MsVUFYQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxnREFZVEQsTUFBTSxDQUFDRSxVQVpFOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBZWhCLGFBQUVDLElBQUYsSUFBVSxZQUFWLElBQTBCLGFBQUVDLElBQUYsSUFBVSxLQWZwQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxvQkFnQlQsSUFBSUMsS0FBSixDQUFVLHlCQUF5QmQsUUFBUSxDQUFDSCxLQUFsQyxHQUEwQyxjQUFwRCxDQWhCUzs7QUFBQTtBQWtCcEJJLGNBQUFBLE9BQU8sQ0FBQ2MsS0FBUjtBQUNBZCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWEsS0FBWjs7QUFuQm9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBc0IxQixHQXZCVTtBQXlCTEMsRUFBQUEsZ0JBekJLLDRCQXlCWW5CLEtBekJaLEVBeUJtQlEsT0F6Qm5CLEVBeUIyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBQ25CLHFCQURtQjs7QUFBQTtBQUM5QlgsY0FBQUEsRUFEOEI7QUFBQTtBQUFBLHFCQUVqQkEsRUFBRSxDQUFDQyxVQUFILENBQWMsTUFBZCxFQUFzQnNCLE9BQXRCLENBQThCO0FBQUNwQixnQkFBQUEsS0FBSyxFQUFDQTtBQUFQLGVBQTlCLENBRmlCOztBQUFBO0FBRTlCcUIsY0FBQUEsSUFGOEI7QUFHbENqQixjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFhRyxPQUF6QjtBQUNBSixjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFhZ0IsSUFBekI7O0FBSmtDLG1CQU0vQmYsbUJBQU9nQixPQUFQLENBQWVkLE9BQWYsRUFBd0JhLElBQUksQ0FBQ2IsT0FBN0IsQ0FOK0I7QUFBQTtBQUFBO0FBQUE7O0FBTzlCSixjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0EscUJBQU9nQixJQUFJLENBQUNiLE9BQVo7QUFDSWUsY0FBQUEsS0FUMEIsR0FTbEJDLHlCQUFJQyxJQUFKLENBQVNKLElBQVQsRUFBZSxPQUFmLEVBQXdCO0FBQ2hDSyxnQkFBQUEsU0FBUyxFQUFHLE9BRG9CO0FBRWhDQyxnQkFBQUEsU0FBUyxFQUFFO0FBRnFCLGVBQXhCLENBVGtCO0FBQUEsZ0RBYXhCO0FBQ0hKLGdCQUFBQSxLQUFLLEVBQUxBLEtBREc7QUFFSHZCLGdCQUFBQSxLQUFLLEVBQUNxQixJQUFJLENBQUNyQjtBQUZSLGVBYndCOztBQUFBO0FBQUEsb0JBbUJ4QixJQUFJaUIsS0FBSixDQUFVLHFCQUFWLENBbkJ3Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQXFCckMsR0E5Q1U7QUFpRFhXLEVBQUFBLE1BakRXLGtCQWlESkMsR0FqREksRUFpRENDLEdBakRELEVBaURLO0FBQ1osUUFBRztBQUNDLFVBQUlDLGFBQWEsR0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVlELGFBQVosQ0FBMEJFLEtBQTFCLENBQWdDLEdBQWhDLENBQXBCO0FBQ0EsVUFBSUMsSUFBSSxHQUFHSCxhQUFhLENBQUMsQ0FBRCxDQUF4QjtBQUNBLFVBQUlSLEtBQUssR0FBR1EsYUFBYSxDQUFDLENBQUQsQ0FBekI7O0FBQ0EsVUFBR0csSUFBSSxLQUFLLFFBQVosRUFBcUI7QUFDakJKLFFBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCO0FBQ0EsZUFBTyxLQUFQO0FBQ0gsT0FIRCxNQUlJO0FBQ0FQLFFBQUFBLEdBQUcsQ0FBQ0wsR0FBSixHQUFTQSx5QkFBSUksTUFBSixDQUFXTCxLQUFYLEVBQWtCO0FBQU87QUFBekIsU0FBVDtBQUNBLGVBQU8sSUFBUDtBQUNIO0FBQ0osS0FaRCxDQWFBLE9BQU1jLENBQU4sRUFBUTtBQUNMLGFBQU9QLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUNuQixRQUFBQSxLQUFLLEVBQUU7QUFBUixPQUFyQixDQUFQO0FBRUY7QUFDSjtBQW5FVSxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSmFuXFxEZXNrdG9wXFxXQSBwcm9qZWt0XFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tICdtb25nb2RiJztcclxuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9kYi5qcyc7XHJcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0J1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcclxuXHJcbiggYXN5bmMgKCkgPT57XHJcbmxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcclxuYXdhaXQgZGIuY29sbGVjdGlvbihcInVzZXJcIikuY3JlYXRlSW5kZXgoe2VtYWlsOiAxfSwge3VuaXF1ZTogdHJ1ZX0pO1xyXG59KSgpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICBhc3luYyByZWdpc3RlclVzZXIodXNlckRhdGEpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCAnRG9icm9kb8WhbGknLCB1c2VyRGF0YSk7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xyXG5cclxuICAgICAgICBsZXQgZG9jID0ge1xyXG4gICAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwsXHJcbiAgICAgICAgICAgIGxvemlua2E6IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXJEYXRhLmxvemlua2EsIDYpLFxyXG4gICAgICAgICAgICBrb3Jpc25pY2tvSW1lOiB1c2VyRGF0YS5rb3Jpc25pY2tvSW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInVzZXJcIikuaW5zZXJ0T25lKGRvYyk7XHJcbiAgICAgICAgICAgaWYocmVzdWx0ICYmIHJlc3VsdC5pbmVzcnRlZElkKVxyXG4gICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmluc2VydGVkSWQ7IFxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgaWYoZS5uYW1lID09IFwiTW9uZ29FcnJvclwiICYmIGUuY29kZSA9PSAxMTAwMCl7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJLb3Jpc25payBzYSBtYWlsb206IFwiICsgdXNlckRhdGEuZW1haWwgKyBcIiB2ZcSHIHBvc3RvamlcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XHJcbiAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0sXHJcbiAgICBcclxuICAgIGFzeW5jIGF1dGhlbnRpY2F0ZXVzZXIoZW1haWwsIGxvemlua2Epe1xyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgIGxldCB1c2VyID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInVzZXJcIikuZmluZE9uZSh7ZW1haWw6ZW1haWx9KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiKysrKysrKytcIiArIGxvemlua2EpXHJcbiAgICAgICAgY29uc29sZS5sb2coXCIrKysrKysrK1wiICsgdXNlcilcclxuXHJcbiAgICAgICAgaWYoYmNyeXB0LmNvbXBhcmUobG96aW5rYSwgdXNlci5sb3ppbmthKSl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tXCIpXHJcbiAgICAgICAgICAgIGRlbGV0ZSB1c2VyLmxvemlua2FcclxuICAgICAgICAgICAgbGV0IHRva2VuID0gand0LnNpZ24odXNlciwgXCJ0YWpuYVwiLCB7XHJcbiAgICAgICAgICAgICAgICBhbGdvcml0aG0gOiBcIkhTNTEyXCIsXHJcbiAgICAgICAgICAgICAgICBleHBpcmVzSW46IFwiMSB3ZWVrXCJcclxuICAgICAgICAgICAgfSkgXHJcbiAgICAgICAgICAgIHJldHVybntcclxuICAgICAgICAgICAgICAgdG9rZW4sXHJcbiAgICAgICAgICAgICAgIGVtYWlsOnVzZXIuZW1haWwsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGF1dGhlbnRpY2F0ZVwiKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBcclxuXHJcbiAgICB2ZXJpZnkocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IGF1dGhvcml6YXRpb24gPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uLnNwbGl0KCcgJyk7XHJcbiAgICAgICAgICAgIGxldCB0eXBlID0gYXV0aG9yaXphdGlvblswXTtcclxuICAgICAgICAgICAgbGV0IHRva2VuID0gYXV0aG9yaXphdGlvblsxXTtcclxuICAgICAgICAgICAgaWYodHlwZSAhPT0gXCJCZWFyZXJcIil7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICByZXEuand0ID1qd3QudmVyaWZ5KHRva2VuLCAndGFqbmEnLypwcm9jZXNzLmVudi5KV1RfU0VDUkVUKi8pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHtFcnJvcjogJ2Vycm9yJ30pO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0gIl19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "registerUser",
        "userData",
        "console",
        "log",
        "bcrypt",
        "hash",
        "lozinka",
        "korisnickoIme",
        "doc",
        "insertOne",
        "result",
        "inesrtedId",
        "insertedId",
        "name",
        "code",
        "Error",
        "error",
        "authenticateuser",
        "findOne",
        "user",
        "compare",
        "token",
        "jwt",
        "sign",
        "algorithm",
        "expiresIn",
        "verify",
        "req",
        "res",
        "authorization",
        "headers",
        "split",
        "type",
        "status",
        "send",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,wDAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa,qBADb;;AAAA;AACEA,UAAAA,EADF;AAAA;AAAA,iBAEIA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBC,WAAtB,CAAkC;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAlC,EAA8C;AAACC,YAAAA,MAAM,EAAE;AAAT,WAA9C,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAF;;eAKe;AACNC,EAAAA,YADM,wBACOC,QADP,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,cAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BF,QAA3B;AADuB;AAAA,qBAER,qBAFQ;;AAAA;AAEnBN,cAAAA,EAFmB;AAAA,6BAKZM,QAAQ,CAACH,KALG;AAAA;AAAA,qBAMJM,mBAAOC,IAAP,CAAYJ,QAAQ,CAACK,OAArB,EAA8B,CAA9B,CANI;;AAAA;AAAA;AAAA,6BAOJL,QAAQ,CAACM,aAPL;AAInBC,cAAAA,GAJmB;AAKnBV,gBAAAA,KALmB;AAMnBQ,gBAAAA,OANmB;AAOnBC,gBAAAA,aAPmB;AAAA;AAAA;AAAA;AAAA,qBAUDZ,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBa,SAAtB,CAAgCD,GAAhC,CAVC;;AAAA;AAUhBE,cAAAA,MAVgB;;AAAA,oBAWjBA,MAAM,IAAIA,MAAM,CAACC,UAXA;AAAA;AAAA;AAAA;;AAAA,gDAYTD,MAAM,CAACE,UAZE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAehB,aAAEC,IAAF,IAAU,YAAV,IAA0B,aAAEC,IAAF,IAAU,KAfpB;AAAA;AAAA;AAAA;;AAAA,oBAgBT,IAAIC,KAAJ,CAAU,yBAAyBd,QAAQ,CAACH,KAAlC,GAA0C,cAApD,CAhBS;;AAAA;AAkBpBI,cAAAA,OAAO,CAACc,KAAR;AACAd,cAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB1B,GAvBU;AAyBLC,EAAAA,gBAzBK,4BAyBYnB,KAzBZ,EAyBmBQ,OAzBnB,EAyB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnB,qBADmB;;AAAA;AAC9BX,cAAAA,EAD8B;AAAA;AAAA,qBAEjBA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBsB,OAAtB,CAA8B;AAACpB,gBAAAA,KAAK,EAACA;AAAP,eAA9B,CAFiB;;AAAA;AAE9BqB,cAAAA,IAF8B;AAGlCjB,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,OAAzB;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAzB;;AAJkC,mBAM/Bf,mBAAOgB,OAAP,CAAed,OAAf,EAAwBa,IAAI,CAACb,OAA7B,CAN+B;AAAA;AAAA;AAAA;;AAO9BJ,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,qBAAOgB,IAAI,CAACb,OAAZ;AACIe,cAAAA,KAT0B,GASlBC,yBAAIC,IAAJ,CAASJ,IAAT,EAAe,OAAf,EAAwB;AAChCK,gBAAAA,SAAS,EAAG,OADoB;AAEhCC,gBAAAA,SAAS,EAAE;AAFqB,eAAxB,CATkB;AAAA,gDAaxB;AACHJ,gBAAAA,KAAK,EAALA,KADG;AAEHvB,gBAAAA,KAAK,EAACqB,IAAI,CAACrB;AAFR,eAbwB;;AAAA;AAAA,oBAmBxB,IAAIiB,KAAJ,CAAU,qBAAV,CAnBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBrC,GA9CU;AAiDXW,EAAAA,MAjDW,kBAiDJC,GAjDI,EAiDCC,GAjDD,EAiDK;AACZ,QAAG;AACC,UAAIC,aAAa,GAAGF,GAAG,CAACG,OAAJ,CAAYD,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,CAApB;AACA,UAAIC,IAAI,GAAGH,aAAa,CAAC,CAAD,CAAxB;AACA,UAAIR,KAAK,GAAGQ,aAAa,CAAC,CAAD,CAAzB;;AACA,UAAGG,IAAI,KAAK,QAAZ,EAAqB;AACjBJ,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACA,eAAO,KAAP;AACH,OAHD,MAII;AACAP,QAAAA,GAAG,CAACL,GAAJ,GAASA,yBAAII,MAAJ,CAAWL,KAAX,EAAkB;AAAO;AAAzB,SAAT;AACA,eAAO,IAAP;AACH;AACJ,KAZD,CAaA,OAAMc,CAAN,EAAQ;AACL,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACnB,QAAAA,KAAK,EAAE;AAAR,OAArB,CAAP;AAEF;AACJ;AAnEU,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\WA projekt\\backend\\src\\",
      "sourcesContent": [
        "import mongo from 'mongodb';\r\nimport connect from './db.js';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n( async () =>{\r\nlet db = await connect();\r\nawait db.collection(\"user\").createIndex({email: 1}, {unique: true});\r\n})();\r\n\r\nexport default {\r\n   async registerUser(userData){\r\n        console.log( 'Dobrodošli', userData);\r\n        let db = await connect();\r\n\r\n        let doc = {\r\n            email: userData.email,\r\n            lozinka: await bcrypt.hash(userData.lozinka, 6),\r\n            korisnickoIme: userData.korisnickoIme,\r\n        };\r\n        try {\r\n           let result = await db.collection(\"user\").insertOne(doc);\r\n           if(result && result.inesrtedId)\r\n               return result.insertedId; \r\n        }\r\n        catch(e){\r\n            if(e.name == \"MongoError\" && e.code == 11000){\r\n                throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\")\r\n            }\r\n           console.error(e);\r\n           console.log(error)\r\n        }\r\n\r\n    },\r\n    \r\n    async authenticateuser(email, lozinka){\r\n        let db = await connect()\r\n        let user = await db.collection(\"user\").findOne({email:email})\r\n        console.log(\"++++++++\" + lozinka)\r\n        console.log(\"++++++++\" + user)\r\n\r\n        if(bcrypt.compare(lozinka, user.lozinka)){\r\n            console.log(\"---------\")\r\n            delete user.lozinka\r\n            let token = jwt.sign(user, \"tajna\", {\r\n                algorithm : \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            }) \r\n            return{\r\n               token,\r\n               email:user.email,\r\n            }\r\n        }\r\n        else{\r\n            throw new Error(\"cannot authenticate\")\r\n        }\r\n    },\r\n    \r\n\r\n    verify(req, res){\r\n        try{\r\n            let authorization = req.headers.authorization.split(' ');\r\n            let type = authorization[0];\r\n            let token = authorization[1];\r\n            if(type !== \"Bearer\"){\r\n                res.status(401).send();\r\n                return false;\r\n            }\r\n            else{\r\n                req.jwt =jwt.verify(token, 'tajna'/*process.env.JWT_SECRET*/);\r\n                return true;\r\n            }\r\n        }\r\n        catch(e){\r\n           return res.status(401).send({Error: 'error'});\r\n\r\n        }\r\n    }\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1622118560340
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nrequire('dotenv').config();\n\nvar app = (0, _express[\"default\"])();\nvar port = 3000;\napp.use((0, _cors[\"default\"])()); // omoguciti cors na svim rutama\n\napp.use(_express[\"default\"].json());\napp.get('/tajna', [_auth[\"default\"].verify], function (req, res) {\n  res.json({\n    message: \"Ovo je tajna \" + req.jwt.email\n  });\n});\napp.post('/registracija', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var db, podaci, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context.sent;\n            podaci = req.body;\n            _context.next = 6;\n            return db.collection('user').insertOne(podaci);\n\n          case 6:\n            result = _context.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/galerija', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var id, db, posts, selekcija, results;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = req.params.id;\n            _context2.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context2.sent;\n\n            /*let galerija = req.body; \r\n            let document = await db.collection(\"galerija\")\r\n            \n            req.send(document);*/\n            posts = req.params;\n            res.send(posts);\n            selekcija = {};\n            _context2.next = 9;\n            return db.collection('galerija').find();\n\n          case 9:\n            results = _context2.sent;\n            res.json(results);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n/*app.get('/galerija/:id', async (req , res) => {\r\n    let galId = req.params.galId;\r\n    let db = await connect();\r\n\r\n    let document = await db.collection(\"galerija\").findOne({_id: mongo.ObjectId(galId)})\r\n    console.log(document)\r\n    res.json(document)\r\n});*/\n\napp.post('/galerija', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var db, galerija, result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context3.sent;\n            galerija = req.body;\n            console.log(galerija);\n            _context3.next = 7;\n            return db.collection('galerija').insertOne(galerija);\n\n          case 7:\n            result = _context3.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/dogadaji', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context4.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context4.next = 7;\n            return db.collection('dogadaji').insertOne(dogadaji);\n\n          case 7:\n            result = _context4.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n/*app.get('/registracija',  (req, res) => {\r\n    let podaci = req.body; \r\n\r\n    res.send(podaci);\r\n})*/\n\napp.listen(port, function () {\n  return console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.post('/user', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var user, _id;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            user = req.body;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _auth[\"default\"].registerUser(user);\n\n          case 4:\n            _id = _context5.sent;\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.status(500).json({\n              error: _context5.t0.message\n            });\n\n          case 10:\n            res.json({\n              status: \"Success\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 7]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.post('/auth', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var user, email, lozinka, result;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            user = req.body;\n            email = user.email;\n            lozinka = user.lozinka;\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _auth[\"default\"].authenticateuser(email, lozinka);\n\n          case 6:\n            result = _context6.sent;\n            res.json(result);\n            res.status(201).json(result);\n            _context6.next = 15;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](3);\n            res.status(500).json({\n              error: _context6.t0.message\n            });\n            console.log(error);\n\n          case 15:\n            res.json({\n              id: id\n            });\n\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 11]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\n\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "port",
        "use",
        "express",
        "json",
        "get",
        "auth",
        "verify",
        "req",
        "res",
        "message",
        "jwt",
        "email",
        "post",
        "db",
        "podaci",
        "body",
        "collection",
        "insertOne",
        "result",
        "insertedCount",
        "send",
        "status",
        "id",
        "insertedId",
        "params",
        "posts",
        "selekcija",
        "find",
        "results",
        "galerija",
        "console",
        "log",
        "dogadaji",
        "listen",
        "user",
        "registerUser",
        "error",
        "lozinka",
        "authenticateuser"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR,E,CAAiB;;AACjBF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAmB,CAACC,iBAAKC,MAAN,CAAnB,EAAkC,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC3CA,EAAAA,GAAG,CAACL,IAAJ,CAAS;AAACM,IAAAA,OAAO,EAAE,kBAAkBF,GAAG,CAACG,GAAJ,CAAQC;AAApC,GAAT;AACH,CAFD;AAIEZ,GAAG,CAACa,IAAJ,CAAS,eAAT;AAAA,qEAA0B,iBAAOL,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,qBADS;;AAAA;AACpBK,YAAAA,EADoB;AAEpBC,YAAAA,MAFoB,GAEXP,GAAG,CAACQ,IAFO;AAAA;AAAA,mBAGLF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgCH,MAAhC,CAHK;;AAAA;AAGpBI,YAAAA,MAHoB;;AAIxB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AAgBFtB,GAAG,CAACK,GAAJ,CAAS,WAAT;AAAA,sEAAsB,kBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACdc,YAAAA,EADc,GACXf,GAAG,CAACiB,MAAJ,CAAWF,EADA;AAAA;AAAA,mBAEH,qBAFG;;AAAA;AAEdT,YAAAA,EAFc;;AAIlB;AACJ;AACA;AACA;AACQY,YAAAA,KARc,GAQNlB,GAAG,CAACiB,MARE;AASlBhB,YAAAA,GAAG,CAACY,IAAJ,CAASK,KAAT;AAEIC,YAAAA,SAXc,GAWF,EAXE;AAAA;AAAA,mBAYEb,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BW,IAA1B,EAZF;;AAAA;AAYdC,YAAAA,OAZc;AAclBpB,YAAAA,GAAG,CAACL,IAAJ,CAASyB,OAAT;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA7B,GAAG,CAACa,IAAJ,CAAU,WAAV;AAAA,sEAAuB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,qBADI;;AAAA;AACfK,YAAAA,EADe;AAEdgB,YAAAA,QAFc,GAEHtB,GAAG,CAACQ,IAFD;AAInBe,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAJmB;AAAA,mBAKAhB,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCY,QAApC,CALA;;AAAA;AAKfX,YAAAA,MALe;;AAMnB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDS,YAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;;AAlBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAqBAnB,GAAG,CAACa,IAAJ,CAAU,WAAV;AAAA,sEAAuB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,qBADI;;AAAA;AACfK,YAAAA,EADe;AAEdmB,YAAAA,QAFc,GAEHzB,GAAG,CAACQ,IAFD;AAInBe,YAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAJmB;AAAA,mBAKAnB,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCe,QAApC,CALA;;AAAA;AAKfd,YAAAA,MALe;;AAMnB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDS,YAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;;AAlBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;;AAGAnB,GAAG,CAACkC,MAAJ,CAAWjC,IAAX,EAAiB;AAAA,SAAM8B,OAAO,CAACC,GAAR,gCAAoC/B,IAApC,WAAN;AAAA,CAAjB;AAGAD,GAAG,CAACa,IAAJ,CAAS,OAAT;AAAA,sEAAkB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACV0B,YAAAA,IADU,GACH3B,GAAG,CAACQ,IADD;AAAA;AAAA;AAAA,mBAIKV,iBAAK8B,YAAL,CAAkBD,IAAlB,CAJL;;AAAA;AAINZ,YAAAA,GAJM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOVd,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqB;AAACiC,cAAAA,KAAK,EAAE,aAAE3B;AAAV,aAArB;;AAPU;AAUdD,YAAAA,GAAG,CAACL,IAAJ,CAAS;AACLkB,cAAAA,MAAM,EAAG;AADJ,aAAT;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiBAtB,GAAG,CAACa,IAAJ,CAAS,OAAT;AAAA,sEAAkB,kBAAOL,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV0B,YAAAA,IAFU,GAEH3B,GAAG,CAACQ,IAFD;AAGVJ,YAAAA,KAHU,GAGFuB,IAAI,CAACvB,KAHH;AAIV0B,YAAAA,OAJU,GAIAH,IAAI,CAACG,OAJL;AAAA;AAAA;AAAA,mBAMQhC,iBAAKiC,gBAAL,CAAsB3B,KAAtB,EAA6B0B,OAA7B,CANR;;AAAA;AAMPnB,YAAAA,MANO;AAOXV,YAAAA,GAAG,CAACL,IAAJ,CAASe,MAAT;AACAV,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqBe,MAArB;AARW;AAAA;;AAAA;AAAA;AAAA;AAWVV,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqB;AAACiC,cAAAA,KAAK,EAAE,aAAE3B;AAAV,aAArB;AACAqB,YAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;AAZU;AAcd5B,YAAAA,GAAG,CAACL,IAAJ,CAAS;AAACmB,cAAAA,EAAE,EAACA;AAAJ,aAAT;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "sourcesContent": [
        "import express, { response } from 'express';\r\nimport data from './store';\r\nimport cors from 'cors';\r\nimport connect from './db.js';\r\nimport mongo from 'mongodb';\r\nimport auth from './auth.js';\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.use(cors()); // omoguciti cors na svim rutama\r\napp.use(express.json());\r\n\r\napp.get('/tajna',  [auth.verify], (req,res) => {\r\n    res.json({message: \"Ovo je tajna \" + req.jwt.email})\r\n})\r\n\r\n  app.post('/registracija', async (req, res) => {\r\n    let db = await connect();\r\n    let podaci = req.body;\r\n    let result = await db.collection('user').insertOne(podaci);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n});\r\napp.get ('/galerija', async (req , res) => {\r\n    let id=req.params.id;\r\n    let db = await connect();\r\n    \r\n    /*let galerija = req.body; \r\n    let document = await db.collection(\"galerija\")\r\n   \r\n    req.send(document);*/\r\n    let posts = req.params;\r\n    res.send(posts);\r\n\r\n    let selekcija = {};\r\n    let results = await db.collection('galerija').find();\r\n\r\n    res.json(results);\r\n});\r\n\r\n/*app.get('/galerija/:id', async (req , res) => {\r\n    let galId = req.params.galId;\r\n    let db = await connect();\r\n\r\n    let document = await db.collection(\"galerija\").findOne({_id: mongo.ObjectId(galId)})\r\n    console.log(document)\r\n    res.json(document)\r\n});*/\r\n\r\napp.post ('/galerija', async (req , res) => {\r\n    let db = await connect();\r\n    let  galerija = req.body;\r\n\r\n    console.log(galerija)\r\n    let result = await db.collection('galerija').insertOne(galerija);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.post ('/dogadaji', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('dogadaji').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\n/*app.get('/registracija',  (req, res) => {\r\n    let podaci = req.body; \r\n\r\n    res.send(podaci);\r\n})*/\r\n\r\n\r\napp.listen(port, () => console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`));\r\n\r\n\r\napp.post('/user', async (req , res) =>{\r\n    let user = req.body;\r\n\r\n    try{\r\n        let id = await auth.registerUser(user);\r\n    }\r\n    catch(e){\r\n        res.status(500).json({error: e.message});\r\n    }\r\n\r\n    res.json({\r\n        status:  \"Success\"\r\n    })\r\n\r\n});\r\n\r\n\r\napp.post('/auth', async (req, res) =>{\r\n\r\n    let user = req.body;\r\n    let email = user.email;\r\n    let lozinka = user.lozinka;\r\n    try{\r\n       let result = await auth.authenticateuser(email, lozinka);\r\n       res.json(result);\r\n       res.status(201).json(result);\r\n    }\r\n    catch (e){\r\n        res.status(500).json({error: e.message})\r\n        console.log(error)\r\n    }\r\n    res.json({id:id});\r\n})\r\n\r\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\r\n\r\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */"
      ]
    },
    "sourceType": "script",
    "mtime": 1623849794714
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnickoIme: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnickoIme: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29JbWUiLCJsb3ppbmthIiwidHVybmlyaSIsImRhdHVtIiwidnJpamVtZSIsImxva2FjaWphIiwia3JhdGtpX29waXMiLCJmaWd1cmUiLCJ1cmxfc2xpa2UiLCJnYWxlcmlqYSIsIm5hc2xvdiIsIm9waXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLElBQUksR0FBRztBQUVQQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEQsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUUsTUFBQUEsS0FBSyxFQUFFLEVBRFg7QUFFSUMsTUFBQUEsYUFBYSxFQUFFLEVBRm5CO0FBR0lDLE1BQUFBLE9BQU8sRUFBRTtBQUhiLEtBREU7QUFEQyxHQUZKO0FBV1BDLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUUsQ0FDRjtBQUNJRyxNQUFBQSxhQUFhLEVBQUUsRUFEbkI7QUFFSUcsTUFBQUEsS0FBSyxFQUFFLElBRlg7QUFHSUMsTUFBQUEsT0FBTyxFQUFFLElBSGI7QUFJSUMsTUFBQUEsUUFBUSxFQUFFLEVBSmQ7QUFLSUMsTUFBQUEsV0FBVyxFQUFFO0FBTGpCLEtBREU7QUFERCxHQVhGO0FBc0JQQyxFQUFBQSxNQUFNLEVBQUU7QUFDSlYsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSVcsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FERTtBQURGLEdBdEJEO0FBNkJQQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlosSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSWEsTUFBQUEsTUFBTSxFQUFFLEVBRFo7QUFFSUMsTUFBQUEsSUFBSSxFQUFFLEVBRlY7QUFHSUgsTUFBQUEsU0FBUyxFQUFFO0FBSGYsS0FERTtBQURBO0FBN0JILENBQVg7ZUF3Q2VYLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKYW5cXERlc2t0b3BcXGdpdFxcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZGF0YSA9IHtcclxuICAgIFxyXG4gICAga29yaXNuaWNpOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBlbWFpbDogXCJcIixcclxuICAgICAgICAgICAgICAgIGtvcmlzbmlja29JbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBsb3ppbmthOiBcIlwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICB9LCBcclxuICAgIHR1cm5pcmk6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGtvcmlzbmlja29JbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBkYXR1bTogbnVsbCxcclxuICAgICAgICAgICAgICAgIHZyaWplbWU6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBsb2thY2lqYTogXCJcIixcclxuICAgICAgICAgICAgICAgIGtyYXRraV9vcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGZpZ3VyZToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIGdhbGVyaWphOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYXNsb3Y6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBvcGlzOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgdXJsX3NsaWtlOiBudWxsLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgZGF0YTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnickoIme",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,aAAa,EAAE,EAFnB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,aAAa,EAAE,EADnB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnickoIme: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnickoIme: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1623836787030
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEphblxcRGVza3RvcFxcZ2l0XFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tIFwibW9uZ29kYlwiXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSBcIm1vbmdvZGIrc3J2Oi8vRmlndXJpWDpwcm9ncmFtZXJpc3RvbGplY2FAY2x1c3RlcjAuZnNudnMubW9uZ29kYi5uZXQvbXlGaXJzdERhdGFiYXNlP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xyXG5cclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZywge1xyXG4gICAgdXNlck5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIHVzZXJVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGxcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PntcclxuXHJcbiAgICAgICAgaWYgKGRiICYmIGNsaWVudC5pc0Nvbm5lY3RlZCgpKXtcclxuICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xpZW50LmNvbm5lY3QoZXJyID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKXtcclxuICAgICAgICAgICAgICAgIHJlamVjdChcIkRvxaFsbyBqZSBkbyBncmXFoWtlIHByaWxpa29tIHNwYWphbmphOiBcIiArIGVycilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVc3BqZcWhbm8gc3BhamFuamUgbmEgYmF6dVwiKVxyXG4gICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoXCJmaWd1cml4XCIpXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKGRiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1623836787029
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"filename\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\\\\src\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jan\\\\Desktop\\\\git\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jan\\Desktop\\git\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\auth.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_dotenv[\"default\"].config();\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.collection(\"user\").createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  registerUser: function registerUser(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var db, doc, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Dobrodošli', userData);\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.t0 = userData.email;\n              _context2.next = 7;\n              return _bcrypt[\"default\"].hash(userData.lozinka, 6);\n\n            case 7:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = userData.korisnickoIme;\n              doc = {\n                email: _context2.t0,\n                lozinka: _context2.t1,\n                korisnickoIme: _context2.t2\n              };\n              _context2.prev = 10;\n              _context2.next = 13;\n              return db.collection(\"user\").insertOne(doc);\n\n            case 13:\n              result = _context2.sent;\n\n              if (!(result && result.inesrtedId)) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", result.insertedId);\n\n            case 16:\n              _context2.next = 24;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t3 = _context2[\"catch\"](10);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 22;\n                break;\n              }\n\n              throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\");\n\n            case 22:\n              console.error(_context2.t3);\n              console.log(error);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 18]]);\n    }))();\n  },\n  authenticateuser: function authenticateuser(email, lozinka) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"user\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              console.log(\"++++++++\" + email);\n              console.log(\"++++++++\" + {\n                email: email\n              });\n              console.log(\"++++++++\" + lozinka);\n              console.log(\"++++++++\" + user.email);\n              console.log(\"++++++++\" + user.lozinka);\n              console.log(\"++++++++\" + user);\n              console.log(user);\n\n              if (!(_bcrypt[\"default\"].compare(lozinka, user.lozinka) && user.lozinka === lozinka)) {\n                _context3.next = 20;\n                break;\n              }\n\n              console.log(\"----JA RADIM-----\");\n              delete user.lozinka;\n              token = _jsonwebtoken[\"default\"].sign(user, \"tajna\", {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              return _context3.abrupt(\"return\", {\n                token: token,\n                email: user.email\n              });\n\n            case 20:\n              throw new Error(\"cannot authenticate\");\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  verify: function verify(req, res, next) {\n    try {\n      var authorization = req.headers.authorization.split(' ');\n      var type = authorization[0];\n      var token = authorization[1];\n\n      if (type !== \"Bearer\") {\n        return res.status(401).send();\n      } else {\n        req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n        return next();\n      }\n    } catch (e) {\n      return res.status(401).send({\n        Error: 'error'\n      });\n    }\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "dotenv",
        "config",
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "registerUser",
        "userData",
        "console",
        "log",
        "bcrypt",
        "hash",
        "lozinka",
        "korisnickoIme",
        "doc",
        "insertOne",
        "result",
        "inesrtedId",
        "insertedId",
        "name",
        "code",
        "Error",
        "error",
        "authenticateuser",
        "findOne",
        "user",
        "compare",
        "token",
        "jwt",
        "sign",
        "algorithm",
        "expiresIn",
        "verify",
        "req",
        "res",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "status",
        "send",
        "process",
        "env",
        "JWT_SECRET",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;AALAA,mBAAOC,MAAP;;AAOA,wDAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa,qBADb;;AAAA;AACEC,UAAAA,EADF;AAAA;AAAA,iBAEIA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBC,WAAtB,CAAkC;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAlC,EAA8C;AAACC,YAAAA,MAAM,EAAE;AAAT,WAA9C,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAF;;eAKe;AACNC,EAAAA,YADM,wBACOC,QADP,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,cAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BF,QAA3B;AADuB;AAAA,qBAER,qBAFQ;;AAAA;AAEnBN,cAAAA,EAFmB;AAAA,6BAKZM,QAAQ,CAACH,KALG;AAAA;AAAA,qBAMJM,mBAAOC,IAAP,CAAYJ,QAAQ,CAACK,OAArB,EAA8B,CAA9B,CANI;;AAAA;AAAA;AAAA,6BAOJL,QAAQ,CAACM,aAPL;AAInBC,cAAAA,GAJmB;AAKnBV,gBAAAA,KALmB;AAMnBQ,gBAAAA,OANmB;AAOnBC,gBAAAA,aAPmB;AAAA;AAAA;AAAA;AAAA,qBAUDZ,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBa,SAAtB,CAAgCD,GAAhC,CAVC;;AAAA;AAUhBE,cAAAA,MAVgB;;AAAA,oBAWjBA,MAAM,IAAIA,MAAM,CAACC,UAXA;AAAA;AAAA;AAAA;;AAAA,gDAYTD,MAAM,CAACE,UAZE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAehB,aAAEC,IAAF,IAAU,YAAV,IAA0B,aAAEC,IAAF,IAAU,KAfpB;AAAA;AAAA;AAAA;;AAAA,oBAgBT,IAAIC,KAAJ,CAAU,yBAAyBd,QAAQ,CAACH,KAAlC,GAA0C,cAApD,CAhBS;;AAAA;AAkBpBI,cAAAA,OAAO,CAACc,KAAR;AACAd,cAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB1B,GAvBU;AAyBLC,EAAAA,gBAzBK,4BAyBYnB,KAzBZ,EAyBmBQ,OAzBnB,EAyB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEnB,qBAFmB;;AAAA;AAE9BX,cAAAA,EAF8B;AAAA;AAAA,qBAGjBA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBsB,OAAtB,CAA8B;AAACpB,gBAAAA,KAAK,EAACA;AAAP,eAA9B,CAHiB;;AAAA;AAG9BqB,cAAAA,IAH8B;AAIlCjB,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAzB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAa;AAACL,gBAAAA,KAAK,EAACA;AAAP,eAAzB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,OAAzB;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAI,CAACrB,KAA9B;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAI,CAACb,OAA9B;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAzB;AACAjB,cAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AAVkC,oBAY/Bf,mBAAOgB,OAAP,CAAed,OAAf,EAAwBa,IAAI,CAACb,OAA7B,KAAuCa,IAAI,CAACb,OAAL,KAAeA,OAZvB;AAAA;AAAA;AAAA;;AAa9BJ,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,qBAAOgB,IAAI,CAACb,OAAZ;AACIe,cAAAA,KAf0B,GAelBC,yBAAIC,IAAJ,CAASJ,IAAT,EAAe,OAAf,EAAwB;AAChCK,gBAAAA,SAAS,EAAG,OADoB;AAEhCC,gBAAAA,SAAS,EAAE;AAFqB,eAAxB,CAfkB;AAAA,gDAoBxB;AACHJ,gBAAAA,KAAK,EAALA,KADG;AAEHvB,gBAAAA,KAAK,EAACqB,IAAI,CAACrB;AAFR,eApBwB;;AAAA;AAAA,oBA4BxB,IAAIiB,KAAJ,CAAU,qBAAV,CA5BwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BrC,GAxDU;AA2DXW,EAAAA,MA3DW,kBA2DJC,GA3DI,EA2DCC,GA3DD,EA2DMC,IA3DN,EA2DW;AAClB,QAAG;AACC,UAAIC,aAAa,GAAGH,GAAG,CAACI,OAAJ,CAAYD,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,CAApB;AACA,UAAIC,IAAI,GAAGH,aAAa,CAAC,CAAD,CAAxB;AACA,UAAIT,KAAK,GAAGS,aAAa,CAAC,CAAD,CAAzB;;AACA,UAAGG,IAAI,KAAK,QAAZ,EAAqB;AACjB,eAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH,OAFD,MAGI;AACAR,QAAAA,GAAG,CAACL,GAAJ,GAASA,yBAAII,MAAJ,CAAWL,KAAX,EAAkBe,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAT;AACA,eAAOT,IAAI,EAAX;AACH;AACJ,KAXD,CAYA,OAAMU,CAAN,EAAQ;AACL,aAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACpB,QAAAA,KAAK,EAAE;AAAR,OAArB,CAAP;AAEF;AACJ;AA5EU,C",
      "sourceRoot": "C:\\Users\\Jan\\Desktop\\git\\backend\\src\\",
      "sourcesContent": [
        "import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nimport mongo from 'mongodb';\r\nimport connect from './db.js';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n( async () =>{\r\nlet db = await connect();\r\nawait db.collection(\"user\").createIndex({email: 1}, {unique: true});\r\n})();\r\n\r\nexport default {\r\n   async registerUser(userData){\r\n        console.log( 'Dobrodošli', userData);\r\n        let db = await connect();\r\n\r\n        let doc = {\r\n            email: userData.email,\r\n            lozinka: await bcrypt.hash(userData.lozinka, 6),\r\n            korisnickoIme: userData.korisnickoIme,\r\n        };\r\n        try {\r\n           let result = await db.collection(\"user\").insertOne(doc);\r\n           if(result && result.inesrtedId)\r\n               return result.insertedId; \r\n        }\r\n        catch(e){\r\n            if(e.name == \"MongoError\" && e.code == 11000){\r\n                throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\")\r\n            }\r\n           console.error(e);\r\n           console.log(error)\r\n        }\r\n\r\n    },\r\n    \r\n    async authenticateuser(email, lozinka){\r\n        \r\n        let db = await connect()\r\n        let user = await db.collection(\"user\").findOne({email:email})\r\n        console.log(\"++++++++\" + email)\r\n        console.log(\"++++++++\" + {email:email})\r\n        console.log(\"++++++++\" + lozinka)\r\n        console.log(\"++++++++\" + user.email)\r\n        console.log(\"++++++++\" + user.lozinka)\r\n        console.log(\"++++++++\" + user)\r\n        console.log(user)\r\n        \r\n        if(bcrypt.compare(lozinka, user.lozinka)&&user.lozinka===lozinka){\r\n            console.log(\"----JA RADIM-----\")\r\n            delete user.lozinka\r\n            let token = jwt.sign(user, \"tajna\", {\r\n                algorithm : \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            }) \r\n            \r\n            return{\r\n               token,\r\n               email:user.email,\r\n            }\r\n        }\r\n       \r\n        else{\r\n            \r\n            throw new Error(\"cannot authenticate\")\r\n            \r\n        }\r\n    },\r\n    \r\n\r\n    verify(req, res, next){\r\n        try{\r\n            let authorization = req.headers.authorization.split(' ');\r\n            let type = authorization[0];\r\n            let token = authorization[1];\r\n            if(type !== \"Bearer\"){\r\n                return res.status(401).send();\r\n            }\r\n            else{\r\n                req.jwt =jwt.verify(token, process.env.JWT_SECRET);\r\n                return next();\r\n            }\r\n        }\r\n        catch(e){\r\n           return res.status(401).send({Error: 'error'});\r\n           \r\n        }\r\n    }\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1623836787028
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\figurix\\backend",
      "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\figurix\\backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nrequire('dotenv').config();\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.PORT || 3000;\napp.use((0, _cors[\"default\"])()); // omoguciti cors na svim rutama\n\napp.use(_express[\"default\"].json());\napp.listen(port, function () {\n  console.log(\"\\n\\nhttp://localhost:\".concat(port, \"/\\n\\n\"));\n});\napp.get('/tajna', [_auth[\"default\"].verify], function (req, res) {\n  res.json({\n    message: \"Ovo je tajna \" + req.jwt.email\n  });\n});\napp.post('/registracija', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var db, podaci, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context.sent;\n            podaci = req.body;\n            _context.next = 6;\n            return db.collection('user').insertOne(podaci);\n\n          case 6:\n            result = _context.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/galerija', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context2.sent;\n            _context2.next = 5;\n            return db.collection('galerija').find({});\n\n          case 5:\n            cursor = _context2.sent;\n            _context2.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context2.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/7wonders', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context3.sent;\n            _context3.next = 5;\n            return db.collection('7wonders').find();\n\n          case 5:\n            cursor = _context3.sent;\n            _context3.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context3.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n/*app.get('/galerija/:id', async (req , res) => {\r\n    let galId = req.params.galId;\r\n    let db = await connect();\r\n\r\n    let document = await db.collection(\"galerija\").findOne({_id: mongo.ObjectId(galId)})\r\n    console.log(document)\r\n    res.json(document)\r\n});*/\n\napp.post('/galerija', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var db, galerija, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context4.sent;\n            galerija = req.body;\n            console.log(galerija);\n            _context4.next = 7;\n            return db.collection('galerija').insertOne(galerija);\n\n          case 7:\n            result = _context4.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/arkhamhorror', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context5.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context5.next = 7;\n            return db.collection('arkhamhorror').insertOne(dogadaji);\n\n          case 7:\n            result = _context5.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.get('/arkhamhorror', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context6.sent;\n            _context6.next = 5;\n            return db.collection('arkhamhorror').find();\n\n          case 5:\n            cursor = _context6.sent;\n            _context6.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context6.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.post('/bloodrage', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context7.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context7.next = 7;\n            return db.collection('bloodrage').insertOne(dogadaji);\n\n          case 7:\n            result = _context7.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.get('/bloodrage', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context8.sent;\n            _context8.next = 5;\n            return db.collection('bloodrage').find();\n\n          case 5:\n            cursor = _context8.sent;\n            _context8.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context8.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.post('/catan', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context9.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context9.next = 7;\n            return db.collection('catan').insertOne(dogadaji);\n\n          case 7:\n            result = _context9.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp.get('/catan', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context10.sent;\n            _context10.next = 5;\n            return db.collection('catan').find();\n\n          case 5:\n            cursor = _context10.sent;\n            _context10.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context10.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp.post('/dnd', /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context11.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context11.next = 7;\n            return db.collection('dnd').insertOne(dogadaji);\n\n          case 7:\n            result = _context11.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}());\napp.get('/dnd', /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context12.sent;\n            _context12.next = 5;\n            return db.collection('dnd').find();\n\n          case 5:\n            cursor = _context12.sent;\n            _context12.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context12.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}());\napp.post('/lostcities', /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context13.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context13.next = 7;\n            return db.collection('lostcities').insertOne(dogadaji);\n\n          case 7:\n            result = _context13.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}());\napp.get('/lostcities', /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context14.sent;\n            _context14.next = 5;\n            return db.collection('lostcities').find();\n\n          case 5:\n            cursor = _context14.sent;\n            _context14.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context14.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}());\napp.post('/mtg', /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context15.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context15.next = 7;\n            return db.collection('mtg').insertOne(dogadaji);\n\n          case 7:\n            result = _context15.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}());\napp.get('/mtg', /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context16.sent;\n            _context16.next = 5;\n            return db.collection('mtg').find();\n\n          case 5:\n            cursor = _context16.sent;\n            _context16.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context16.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n\n  return function (_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}());\napp.post('/risk', /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context17.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context17.next = 7;\n            return db.collection('risk').insertOne(dogadaji);\n\n          case 7:\n            result = _context17.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}());\napp.get('/risk', /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context18.sent;\n            _context18.next = 5;\n            return db.collection('risk').find();\n\n          case 5:\n            cursor = _context18.sent;\n            _context18.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context18.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref18.apply(this, arguments);\n  };\n}());\napp.post('/pokemon', /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context19.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context19.next = 7;\n            return db.collection('pokemon').insertOne(dogadaji);\n\n          case 7:\n            result = _context19.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n\n  return function (_x37, _x38) {\n    return _ref19.apply(this, arguments);\n  };\n}());\napp.get('/pokemon', /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context20.sent;\n            _context20.next = 5;\n            return db.collection('pokemon').find();\n\n          case 5:\n            cursor = _context20.sent;\n            _context20.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context20.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n\n  return function (_x39, _x40) {\n    return _ref20.apply(this, arguments);\n  };\n}());\napp.post('/splendor', /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _context21.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context21.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context21.next = 7;\n            return db.collection('splendor').insertOne(dogadaji);\n\n          case 7:\n            result = _context21.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n\n  return function (_x41, _x42) {\n    return _ref21.apply(this, arguments);\n  };\n}());\napp.get('/splendor', /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context22.sent;\n            _context22.next = 5;\n            return db.collection('splendor').find();\n\n          case 5:\n            cursor = _context22.sent;\n            _context22.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context22.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n\n  return function (_x43, _x44) {\n    return _ref22.apply(this, arguments);\n  };\n}());\napp.post('/uno', /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            _context23.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context23.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context23.next = 7;\n            return db.collection('uno').insertOne(dogadaji);\n\n          case 7:\n            result = _context23.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23);\n  }));\n\n  return function (_x45, _x46) {\n    return _ref23.apply(this, arguments);\n  };\n}());\napp.get('/uno', /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            _context24.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context24.sent;\n            _context24.next = 5;\n            return db.collection('uno').find();\n\n          case 5:\n            cursor = _context24.sent;\n            _context24.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context24.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24);\n  }));\n\n  return function (_x47, _x48) {\n    return _ref24.apply(this, arguments);\n  };\n}());\napp.post('/yugioh', /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(req, res) {\n    var db, dogadaji, result;\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            _context25.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context25.sent;\n            dogadaji = req.body;\n            console.log(dogadaji);\n            _context25.next = 7;\n            return db.collection('yugioh').insertOne(dogadaji);\n\n          case 7:\n            result = _context25.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 10:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n\n  return function (_x49, _x50) {\n    return _ref25.apply(this, arguments);\n  };\n}());\napp.get('/yugioh', /*#__PURE__*/function () {\n  var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            _context26.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context26.sent;\n            _context26.next = 5;\n            return db.collection('yugioh').find();\n\n          case 5:\n            cursor = _context26.sent;\n            _context26.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context26.sent;\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26);\n  }));\n\n  return function (_x51, _x52) {\n    return _ref26.apply(this, arguments);\n  };\n}());\napp.post('/user', /*#__PURE__*/function () {\n  var _ref27 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(req, res) {\n    var user, _id;\n\n    return regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            user = req.body;\n            _context27.prev = 1;\n            _context27.next = 4;\n            return _auth[\"default\"].registerUser(user);\n\n          case 4:\n            _id = _context27.sent;\n            _context27.next = 10;\n            break;\n\n          case 7:\n            _context27.prev = 7;\n            _context27.t0 = _context27[\"catch\"](1);\n            res.status(500).json({\n              error: _context27.t0.message\n            });\n\n          case 10:\n            res.json({\n              status: \"Success\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, null, [[1, 7]]);\n  }));\n\n  return function (_x53, _x54) {\n    return _ref27.apply(this, arguments);\n  };\n}());\napp.post('/auth', /*#__PURE__*/function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(req, res) {\n    var user, email, lozinka, result;\n    return regeneratorRuntime.wrap(function _callee28$(_context28) {\n      while (1) {\n        switch (_context28.prev = _context28.next) {\n          case 0:\n            user = req.body;\n            email = user.email;\n            lozinka = user.lozinka;\n            _context28.prev = 3;\n            _context28.next = 6;\n            return _auth[\"default\"].authenticateuser(email, lozinka);\n\n          case 6:\n            result = _context28.sent;\n            res.json(result);\n            res.status(201).json(result);\n            _context28.next = 15;\n            break;\n\n          case 11:\n            _context28.prev = 11;\n            _context28.t0 = _context28[\"catch\"](3);\n            res.status(500).json({\n              error: _context28.t0.message\n            });\n            console.log(error);\n\n          case 15:\n            res.json({\n              id: id\n            });\n\n          case 16:\n          case \"end\":\n            return _context28.stop();\n        }\n      }\n    }, _callee28, null, [[3, 11]]);\n  }));\n\n  return function (_x55, _x56) {\n    return _ref28.apply(this, arguments);\n  };\n}());\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\n\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "get",
        "auth",
        "verify",
        "req",
        "res",
        "message",
        "jwt",
        "email",
        "post",
        "db",
        "podaci",
        "body",
        "collection",
        "insertOne",
        "result",
        "insertedCount",
        "send",
        "status",
        "id",
        "insertedId",
        "find",
        "cursor",
        "toArray",
        "results",
        "galerija",
        "dogadaji",
        "user",
        "registerUser",
        "error",
        "lozinka",
        "authenticateuser"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,uBAAR,E,CAAiB;;AACjBL,GAAG,CAACK,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAP,GAAG,CAACQ,MAAJ,CAAWP,IAAX,EAAiB,YAAY;AAAEQ,EAAAA,OAAO,CAACC,GAAR,gCAAoCT,IAApC;AAAiD,CAAhF;AAEAD,GAAG,CAACW,GAAJ,CAAQ,QAAR,EAAmB,CAACC,iBAAKC,MAAN,CAAnB,EAAkC,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC3CA,EAAAA,GAAG,CAACR,IAAJ,CAAS;AAACS,IAAAA,OAAO,EAAE,kBAAkBF,GAAG,CAACG,GAAJ,CAAQC;AAApC,GAAT;AACH,CAFD;AAIElB,GAAG,CAACmB,IAAJ,CAAS,eAAT;AAAA,qEAA0B,iBAAOL,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,qBADS;;AAAA;AACpBK,YAAAA,EADoB;AAEpBC,YAAAA,MAFoB,GAEXP,GAAG,CAACQ,IAFO;AAAA;AAAA,mBAGLF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgCH,MAAhC,CAHK;;AAAA;AAGpBI,YAAAA,MAHoB;;AAIxB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AAgBF5B,GAAG,CAACW,GAAJ,CAAS,WAAT;AAAA,sEAAsB,kBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,qBADG;;AAAA;AACdK,YAAAA,EADc;AAAA;AAAA,mBAECA,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BQ,IAA1B,CAA+B,EAA/B,CAFD;;AAAA;AAEdC,YAAAA,MAFc;AAAA;AAAA,mBAGEA,MAAM,CAACC,OAAP,EAHF;;AAAA;AAGdC,YAAAA,OAHc;AAKlBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAQAlC,GAAG,CAACW,GAAJ,CAAS,WAAT;AAAA,sEAAsB,kBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,qBADG;;AAAA;AACdK,YAAAA,EADc;AAAA;AAAA,mBAGCA,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BQ,IAA1B,EAHD;;AAAA;AAGdC,YAAAA,MAHc;AAAA;AAAA,mBAIEA,MAAM,CAACC,OAAP,EAJF;;AAAA;AAIdC,YAAAA,OAJc;AAMlBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlC,GAAG,CAACmB,IAAJ,CAAU,WAAV;AAAA,sEAAuB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,qBADI;;AAAA;AACfK,YAAAA,EADe;AAEde,YAAAA,QAFc,GAEHrB,GAAG,CAACQ,IAFD;AAInBb,YAAAA,OAAO,CAACC,GAAR,CAAYyB,QAAZ;AAJmB;AAAA,mBAKAf,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCW,QAApC,CALA;;AAAA;AAKfV,YAAAA,MALe;;AAMnB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACmB,IAAJ,CAAU,eAAV;AAAA,sEAA2B,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR,qBADQ;;AAAA;AACnBK,YAAAA,EADmB;AAElBgB,YAAAA,QAFkB,GAEPtB,GAAG,CAACQ,IAFG;AAIvBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJuB;AAAA,mBAKJhB,EAAE,CAACG,UAAH,CAAc,cAAd,EAA8BC,SAA9B,CAAwCY,QAAxC,CALI;;AAAA;AAKnBX,YAAAA,MALmB;;AAMvB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,eAAT;AAAA,sEAA0B,kBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP,qBADO;;AAAA;AAClBK,YAAAA,EADkB;AAAA;AAAA,mBAGHA,EAAE,CAACG,UAAH,CAAc,cAAd,EAA8BQ,IAA9B,EAHG;;AAAA;AAGlBC,YAAAA,MAHkB;AAAA;AAAA,mBAIFA,MAAM,CAACC,OAAP,EAJE;;AAAA;AAIlBC,YAAAA,OAJkB;AAMtBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,YAAV;AAAA,sEAAwB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACL,qBADK;;AAAA;AAChBK,YAAAA,EADgB;AAEfgB,YAAAA,QAFe,GAEJtB,GAAG,CAACQ,IAFA;AAIpBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJoB;AAAA,mBAKDhB,EAAE,CAACG,UAAH,CAAc,WAAd,EAA2BC,SAA3B,CAAqCY,QAArC,CALC;;AAAA;AAKhBX,YAAAA,MALgB;;AAMpB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,YAAT;AAAA,sEAAuB,kBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,qBADI;;AAAA;AACfK,YAAAA,EADe;AAAA;AAAA,mBAGAA,EAAE,CAACG,UAAH,CAAc,WAAd,EAA2BQ,IAA3B,EAHA;;AAAA;AAGfC,YAAAA,MAHe;AAAA;AAAA,mBAICA,MAAM,CAACC,OAAP,EAJD;;AAAA;AAIfC,YAAAA,OAJe;AAMnBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAQAlC,GAAG,CAACmB,IAAJ,CAAU,QAAV;AAAA,sEAAoB,kBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,qBADC;;AAAA;AACZK,YAAAA,EADY;AAEXgB,YAAAA,QAFW,GAEAtB,GAAG,CAACQ,IAFJ;AAIhBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJgB;AAAA,mBAKGhB,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,SAAvB,CAAiCY,QAAjC,CALH;;AAAA;AAKZX,YAAAA,MALY;;AAMhB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,QAAT;AAAA,uEAAmB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,qBADA;;AAAA;AACXK,YAAAA,EADW;AAAA;AAAA,mBAGIA,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBQ,IAAvB,EAHJ;;AAAA;AAGXC,YAAAA,MAHW;AAAA;AAAA,mBAIKA,MAAM,CAACC,OAAP,EAJL;;AAAA;AAIXC,YAAAA,OAJW;AAMfnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,MAAV;AAAA,uEAAkB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,qBADD;;AAAA;AACVK,YAAAA,EADU;AAETgB,YAAAA,QAFS,GAEEtB,GAAG,CAACQ,IAFN;AAIdb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJc;AAAA,mBAKKhB,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBC,SAArB,CAA+BY,QAA/B,CALL;;AAAA;AAKVX,YAAAA,MALU;;AAMd,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,MAAT;AAAA,uEAAiB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,qBADF;;AAAA;AACTK,YAAAA,EADS;AAAA;AAAA,mBAGMA,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBQ,IAArB,EAHN;;AAAA;AAGTC,YAAAA,MAHS;AAAA;AAAA,mBAIOA,MAAM,CAACC,OAAP,EAJP;;AAAA;AAITC,YAAAA,OAJS;AAMbnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,aAAV;AAAA,uEAAyB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACN,qBADM;;AAAA;AACjBK,YAAAA,EADiB;AAEhBgB,YAAAA,QAFgB,GAELtB,GAAG,CAACQ,IAFC;AAIrBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJqB;AAAA,mBAKFhB,EAAE,CAACG,UAAH,CAAc,YAAd,EAA4BC,SAA5B,CAAsCY,QAAtC,CALE;;AAAA;AAKjBX,YAAAA,MALiB;;AAMrB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,aAAT;AAAA,uEAAwB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACL,qBADK;;AAAA;AAChBK,YAAAA,EADgB;AAAA;AAAA,mBAGDA,EAAE,CAACG,UAAH,CAAc,YAAd,EAA4BQ,IAA5B,EAHC;;AAAA;AAGhBC,YAAAA,MAHgB;AAAA;AAAA,mBAIAA,MAAM,CAACC,OAAP,EAJA;;AAAA;AAIhBC,YAAAA,OAJgB;AAMpBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,MAAV;AAAA,uEAAkB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,qBADD;;AAAA;AACVK,YAAAA,EADU;AAETgB,YAAAA,QAFS,GAEEtB,GAAG,CAACQ,IAFN;AAIdb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJc;AAAA,mBAKKhB,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBC,SAArB,CAA+BY,QAA/B,CALL;;AAAA;AAKVX,YAAAA,MALU;;AAMd,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,MAAT;AAAA,uEAAiB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,qBADF;;AAAA;AACTK,YAAAA,EADS;AAAA;AAAA,mBAGMA,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBQ,IAArB,EAHN;;AAAA;AAGTC,YAAAA,MAHS;AAAA;AAAA,mBAIOA,MAAM,CAACC,OAAP,EAJP;;AAAA;AAITC,YAAAA,OAJS;AAMbnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,OAAV;AAAA,uEAAmB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,qBADA;;AAAA;AACXK,YAAAA,EADW;AAEVgB,YAAAA,QAFU,GAECtB,GAAG,CAACQ,IAFL;AAIfb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJe;AAAA,mBAKIhB,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgCY,QAAhC,CALJ;;AAAA;AAKXX,YAAAA,MALW;;AAMf,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,OAAT;AAAA,uEAAkB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,qBADD;;AAAA;AACVK,YAAAA,EADU;AAAA;AAAA,mBAGKA,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBQ,IAAtB,EAHL;;AAAA;AAGVC,YAAAA,MAHU;AAAA;AAAA,mBAIMA,MAAM,CAACC,OAAP,EAJN;;AAAA;AAIVC,YAAAA,OAJU;AAMdnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,UAAV;AAAA,uEAAsB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,qBADG;;AAAA;AACdK,YAAAA,EADc;AAEbgB,YAAAA,QAFa,GAEFtB,GAAG,CAACQ,IAFF;AAIlBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJkB;AAAA,mBAKChB,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBC,SAAzB,CAAmCY,QAAnC,CALD;;AAAA;AAKdX,YAAAA,MALc;;AAMlB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,UAAT;AAAA,uEAAqB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACF,qBADE;;AAAA;AACbK,YAAAA,EADa;AAAA;AAAA,mBAGEA,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBQ,IAAzB,EAHF;;AAAA;AAGbC,YAAAA,MAHa;AAAA;AAAA,mBAIGA,MAAM,CAACC,OAAP,EAJH;;AAAA;AAIbC,YAAAA,OAJa;AAMjBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,WAAV;AAAA,uEAAuB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,qBADI;;AAAA;AACfK,YAAAA,EADe;AAEdgB,YAAAA,QAFc,GAEHtB,GAAG,CAACQ,IAFD;AAInBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJmB;AAAA,mBAKAhB,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCY,QAApC,CALA;;AAAA;AAKfX,YAAAA,MALe;;AAMnB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,WAAT;AAAA,uEAAsB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,qBADG;;AAAA;AACdK,YAAAA,EADc;AAAA;AAAA,mBAGCA,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BQ,IAA1B,EAHD;;AAAA;AAGdC,YAAAA,MAHc;AAAA;AAAA,mBAIEA,MAAM,CAACC,OAAP,EAJF;;AAAA;AAIdC,YAAAA,OAJc;AAMlBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,MAAV;AAAA,uEAAkB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,qBADD;;AAAA;AACVK,YAAAA,EADU;AAETgB,YAAAA,QAFS,GAEEtB,GAAG,CAACQ,IAFN;AAIdb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJc;AAAA,mBAKKhB,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBC,SAArB,CAA+BY,QAA/B,CALL;;AAAA;AAKVX,YAAAA,MALU;;AAMd,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAqBAzB,GAAG,CAACW,GAAJ,CAAS,MAAT;AAAA,uEAAiB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,qBADF;;AAAA;AACTK,YAAAA,EADS;AAAA;AAAA,mBAGMA,EAAE,CAACG,UAAH,CAAc,KAAd,EAAqBQ,IAArB,EAHN;;AAAA;AAGTC,YAAAA,MAHS;AAAA;AAAA,mBAIOA,MAAM,CAACC,OAAP,EAJP;;AAAA;AAITC,YAAAA,OAJS;AAMbnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AASAlC,GAAG,CAACmB,IAAJ,CAAU,SAAV;AAAA,uEAAqB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACF,qBADE;;AAAA;AACbK,YAAAA,EADa;AAEZgB,YAAAA,QAFY,GAEDtB,GAAG,CAACQ,IAFH;AAIjBb,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAJiB;AAAA,mBAKEhB,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,SAAxB,CAAkCY,QAAlC,CALF;;AAAA;AAKbX,YAAAA,MALa;;AAMjB,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BX,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE,SADH;AAELC,gBAAAA,EAAE,EAAEJ,MAAM,CAACK;AAFN,eAAT;AAIH,aALD,MAMK;AACDf,cAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AAEDnB,YAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAlBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;AAsBAzB,GAAG,CAACW,GAAJ,CAAS,SAAT;AAAA,uEAAoB,mBAAOG,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,qBADC;;AAAA;AACZK,YAAAA,EADY;AAAA;AAAA,mBAGGA,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBQ,IAAxB,EAHH;;AAAA;AAGZC,YAAAA,MAHY;AAAA;AAAA,mBAIIA,MAAM,CAACC,OAAP,EAJJ;;AAAA;AAIZC,YAAAA,OAJY;AAMhBnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,OAAT;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;AAWAlC,GAAG,CAACmB,IAAJ,CAAS,OAAT;AAAA,uEAAkB,mBAAOL,GAAP,EAAaC,GAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVsB,YAAAA,IADU,GACHvB,GAAG,CAACQ,IADD;AAAA;AAAA;AAAA,mBAIKV,iBAAK0B,YAAL,CAAkBD,IAAlB,CAJL;;AAAA;AAINR,YAAAA,GAJM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOVd,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB;AAACgC,cAAAA,KAAK,EAAE,cAAEvB;AAAV,aAArB;;AAPU;AAUdD,YAAAA,GAAG,CAACR,IAAJ,CAAS;AACLqB,cAAAA,MAAM,EAAG;AADJ,aAAT;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiBA5B,GAAG,CAACmB,IAAJ,CAAS,OAAT;AAAA,uEAAkB,mBAAOL,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVsB,YAAAA,IAFU,GAEHvB,GAAG,CAACQ,IAFD;AAGVJ,YAAAA,KAHU,GAGFmB,IAAI,CAACnB,KAHH;AAIVsB,YAAAA,OAJU,GAIAH,IAAI,CAACG,OAJL;AAAA;AAAA;AAAA,mBAMQ5B,iBAAK6B,gBAAL,CAAsBvB,KAAtB,EAA6BsB,OAA7B,CANR;;AAAA;AAMPf,YAAAA,MANO;AAOXV,YAAAA,GAAG,CAACR,IAAJ,CAASkB,MAAT;AACAV,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqBkB,MAArB;AARW;AAAA;;AAAA;AAAA;AAAA;AAWVV,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB;AAACgC,cAAAA,KAAK,EAAE,cAAEvB;AAAV,aAArB;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY6B,KAAZ;;AAZU;AAcdxB,YAAAA,GAAG,CAACR,IAAJ,CAAS;AAACsB,cAAAA,EAAE,EAACA;AAAJ,aAAT;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA",
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "sourcesContent": [
        "import express, { response } from 'express';\r\nimport cors from 'cors';\r\nimport connect from './db.js';\r\nimport mongo from 'mongodb';\r\nimport auth from './auth.js';\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\napp.use(cors()); // omoguciti cors na svim rutama\r\napp.use(express.json());\r\n\r\napp.listen(port, function () { console.log(`\\n\\nhttp://localhost:${port}/\\n\\n`)});\r\n\r\napp.get('/tajna',  [auth.verify], (req,res) => {\r\n    res.json({message: \"Ovo je tajna \" + req.jwt.email})\r\n})\r\n\r\n  app.post('/registracija', async (req, res) => {\r\n    let db = await connect();\r\n    let podaci = req.body;\r\n    let result = await db.collection('user').insertOne(podaci);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n});\r\napp.get ('/galerija', async (req , res) => {\r\n    let db = await connect();\r\n    let cursor = await db.collection('galerija').find({});\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.get ('/7wonders', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('7wonders').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n/*app.get('/galerija/:id', async (req , res) => {\r\n    let galId = req.params.galId;\r\n    let db = await connect();\r\n\r\n    let document = await db.collection(\"galerija\").findOne({_id: mongo.ObjectId(galId)})\r\n    console.log(document)\r\n    res.json(document)\r\n});*/\r\n\r\napp.post ('/galerija', async (req , res) => {\r\n    let db = await connect();\r\n    let  galerija = req.body;\r\n\r\n    console.log(galerija)\r\n    let result = await db.collection('galerija').insertOne(galerija);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.post ('/arkhamhorror', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('arkhamhorror').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/arkhamhorror', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('arkhamhorror').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/bloodrage', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('bloodrage').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/bloodrage', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('bloodrage').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\napp.post ('/catan', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('catan').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/catan', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('catan').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/dnd', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('dnd').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/dnd', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('dnd').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/lostcities', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('lostcities').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/lostcities', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('lostcities').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/mtg', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('mtg').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/mtg', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('mtg').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/risk', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('risk').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/risk', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('risk').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/pokemon', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('pokemon').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/pokemon', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('pokemon').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/splendor', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('splendor').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/splendor', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('splendor').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/uno', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('uno').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get ('/uno', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('uno').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\napp.post ('/yugioh', async (req , res) => {\r\n    let db = await connect();\r\n    let  dogadaji = req.body;\r\n\r\n    console.log(dogadaji)\r\n    let result = await db.collection('yugioh').insertOne(dogadaji);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\n\r\napp.get ('/yugioh', async (req , res) => {\r\n    let db = await connect();\r\n  \r\n    let cursor = await db.collection('yugioh').find();\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results);\r\n});\r\n\r\n\r\n\r\napp.post('/user', async (req , res) =>{\r\n    let user = req.body;\r\n\r\n    try{\r\n        let id = await auth.registerUser(user);\r\n    }\r\n    catch(e){\r\n        res.status(500).json({error: e.message});\r\n    }\r\n\r\n    res.json({\r\n        status:  \"Success\"\r\n    })\r\n\r\n});\r\n\r\n\r\napp.post('/auth', async (req, res) =>{\r\n\r\n    let user = req.body;\r\n    let email = user.email;\r\n    let lozinka = user.lozinka;\r\n    try{\r\n       let result = await auth.authenticateuser(email, lozinka);\r\n       res.json(result);\r\n       res.status(201).json(result);\r\n    }\r\n    catch (e){\r\n        res.status(500).json({error: e.message})\r\n        console.log(error)\r\n    }\r\n    res.json({id:id});\r\n})\r\n\r\n/*\r\n app.patch(\"/user\" , [auth.verify], async (req, res) =>{\r\n    let changes = req.body;\r\n\r\n    let email = req.jwt.email;\r\n\r\n    if(changes.new_password && changes.old_password){\r\n        let result = await auth.changeUserPassword(email, changes.old_password, changes.new_password)\r\n        if(result){\r\n            res.status(201).send()\r\n        }\r\n        else{\r\n            res.status(500).json({error: \"cannot change password\"});          //greška na serveru status 500\r\n        }\r\n    }\r\n    else{\r\n        res.status(400).json({error: \"krivi upit\"});     //korinik je poslao loše definiran upitnik \r\n    }\r\n\r\n})\r\n*/\r\n\r\n/*app.listen(port, () => console.log(`Slušam na portu ${port}!`)) */"
      ]
    },
    "sourceType": "script",
    "mtime": 1624193918796
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\figurix\\backend",
      "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\figurix\\backend\\src\\store.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar data = {\n  korisnici: {\n    data: [{\n      email: \"\",\n      korisnickoIme: \"\",\n      lozinka: \"\"\n    }]\n  },\n  turniri: {\n    data: [{\n      korisnickoIme: \"\",\n      datum: null,\n      vrijeme: null,\n      lokacija: \"\",\n      kratki_opis: \"\"\n    }]\n  },\n  figure: {\n    data: [{\n      url_slike: null\n    }]\n  },\n  galerija: {\n    data: [{\n      naslov: \"\",\n      opis: \"\",\n      url_slike: null\n    }]\n  }\n};\nvar _default = data;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJrb3Jpc25pY2kiLCJlbWFpbCIsImtvcmlzbmlja29JbWUiLCJsb3ppbmthIiwidHVybmlyaSIsImRhdHVtIiwidnJpamVtZSIsImxva2FjaWphIiwia3JhdGtpX29waXMiLCJmaWd1cmUiLCJ1cmxfc2xpa2UiLCJnYWxlcmlqYSIsIm5hc2xvdiIsIm9waXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLElBQUksR0FBRztBQUVQQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEQsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSUUsTUFBQUEsS0FBSyxFQUFFLEVBRFg7QUFFSUMsTUFBQUEsYUFBYSxFQUFFLEVBRm5CO0FBR0lDLE1BQUFBLE9BQU8sRUFBRTtBQUhiLEtBREU7QUFEQyxHQUZKO0FBV1BDLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUUsQ0FDRjtBQUNJRyxNQUFBQSxhQUFhLEVBQUUsRUFEbkI7QUFFSUcsTUFBQUEsS0FBSyxFQUFFLElBRlg7QUFHSUMsTUFBQUEsT0FBTyxFQUFFLElBSGI7QUFJSUMsTUFBQUEsUUFBUSxFQUFFLEVBSmQ7QUFLSUMsTUFBQUEsV0FBVyxFQUFFO0FBTGpCLEtBREU7QUFERCxHQVhGO0FBc0JQQyxFQUFBQSxNQUFNLEVBQUU7QUFDSlYsSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSVcsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FERTtBQURGLEdBdEJEO0FBNkJQQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlosSUFBQUEsSUFBSSxFQUFFLENBQ0Y7QUFDSWEsTUFBQUEsTUFBTSxFQUFFLEVBRFo7QUFFSUMsTUFBQUEsSUFBSSxFQUFFLEVBRlY7QUFHSUgsTUFBQUEsU0FBUyxFQUFFO0FBSGYsS0FERTtBQURBO0FBN0JILENBQVg7ZUF3Q2VYLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTbGF2ZW5cXGZpZ3VyaXhcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGRhdGEgPSB7XHJcbiAgICBcclxuICAgIGtvcmlzbmljaToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZW1haWw6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvSW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgbG96aW5rYTogXCJcIixcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgfSwgXHJcbiAgICB0dXJuaXJpOiB7XHJcbiAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBrb3Jpc25pY2tvSW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgZGF0dW06IG51bGwsXHJcbiAgICAgICAgICAgICAgICB2cmlqZW1lOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgbG9rYWNpamE6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrcmF0a2lfb3BpczogXCJcIixcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBmaWd1cmU6IHtcclxuICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICBnYWxlcmlqYToge1xyXG4gICAgICAgIGRhdGE6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFzbG92OiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgb3BpczogXCJcIixcclxuICAgICAgICAgICAgICAgIHVybF9zbGlrZTogbnVsbCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGRhdGE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "data",
        "korisnici",
        "email",
        "korisnickoIme",
        "lozinka",
        "turniri",
        "datum",
        "vrijeme",
        "lokacija",
        "kratki_opis",
        "figure",
        "url_slike",
        "galerija",
        "naslov",
        "opis"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AAEPC,EAAAA,SAAS,EAAE;AACPD,IAAAA,IAAI,EAAE,CACF;AACIE,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,aAAa,EAAE,EAFnB;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADE;AADC,GAFJ;AAWPC,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAE,CACF;AACIG,MAAAA,aAAa,EAAE,EADnB;AAEIG,MAAAA,KAAK,EAAE,IAFX;AAGIC,MAAAA,OAAO,EAAE,IAHb;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADE;AADD,GAXF;AAsBPC,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAE,CACF;AACIW,MAAAA,SAAS,EAAE;AADf,KADE;AADF,GAtBD;AA6BPC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAE,CACF;AACIa,MAAAA,MAAM,EAAE,EADZ;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIH,MAAAA,SAAS,EAAE;AAHf,KADE;AADA;AA7BH,CAAX;eAwCeX,I",
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "sourcesContent": [
        "let data = {\r\n    \r\n    korisnici: {\r\n        data: [\r\n            {\r\n                email: \"\",\r\n                korisnickoIme: \"\",\r\n                lozinka: \"\",\r\n            },\r\n        ],\r\n    }, \r\n    turniri: {\r\n        data: [\r\n            {\r\n                korisnickoIme: \"\",\r\n                datum: null,\r\n                vrijeme: null,\r\n                lokacija: \"\",\r\n                kratki_opis: \"\",\r\n            }\r\n        ]\r\n    },\r\n    figure: {\r\n        data: [\r\n            {\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n    galerija: {\r\n        data: [\r\n            {\r\n                naslov: \"\",\r\n                opis: \"\",\r\n                url_slike: null,\r\n            }\r\n        ]\r\n    },\r\n\r\n}\r\nexport default data;"
      ]
    },
    "sourceType": "script",
    "mtime": 1624193016357
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\figurix\\backend",
      "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\figurix\\backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  userNewUrlParser: true,\n  userUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Došlo je do greške prilikom spajanja: \" + err);\n      } else {\n        console.log(\"Uspješno spajanje na bazu\");\n        db = client.db(\"figurix\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZXJOZXdVcmxQYXJzZXIiLCJ1c2VyVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImlzQ29ubmVjdGVkIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLGlCQUFpQixHQUFHLGlIQUF4QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxvQkFBTUMsV0FBVixDQUFzQkgsaUJBQXRCLEVBQXlDO0FBQ2xESSxFQUFBQSxnQkFBZ0IsRUFBRSxJQURnQztBQUVsREMsRUFBQUEsbUJBQW1CLEVBQUU7QUFGNkIsQ0FBekMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFFLElBQUlMLE1BQU0sQ0FBQ1MsV0FBUCxFQUFWLEVBQStCO0FBQzNCRixNQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNIOztBQUNETCxJQUFBQSxNQUFNLENBQUNVLE9BQVAsQ0FBZSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hILFFBQUFBLE1BQU0sQ0FBQywyQ0FBMkNHLEdBQTVDLENBQU47QUFDSCxPQUZELE1BR0k7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQVIsUUFBQUEsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNsYXZlblxcZmlndXJpeFxcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ28gZnJvbSBcIm1vbmdvZGJcIlxyXG5cclxubGV0IGNvbm5lY3Rpb25fc3RyaW5nID0gXCJtb25nb2RiK3NydjovL0ZpZ3VyaVg6cHJvZ3JhbWVyaXN0b2xqZWNhQGNsdXN0ZXIwLmZzbnZzLm1vbmdvZGIubmV0L215Rmlyc3REYXRhYmFzZT9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIjtcclxuXHJcbmxldCBjbGllbnQgPSBuZXcgbW9uZ28uTW9uZ29DbGllbnQoY29ubmVjdGlvbl9zdHJpbmcsIHtcclxuICAgIHVzZXJOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VyVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pXHJcblxyXG5sZXQgZGIgPSBudWxsXHJcblxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT57XHJcblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSl7XHJcbiAgICAgICAgICAgIHJlc29sdmUoZGIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsaWVudC5jb25uZWN0KGVyciA9PiB7XHJcbiAgICAgICAgICAgIGlmKGVycil7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoXCJEb8WhbG8gamUgZG8gZ3JlxaFrZSBwcmlsaWtvbSBzcGFqYW5qYTogXCIgKyBlcnIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVXNwamXFoW5vIHNwYWphbmplIG5hIGJhenVcIilcclxuICAgICAgICAgICAgICAgIGRiID0gY2xpZW50LmRiKFwiZmlndXJpeFwiKVxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "userNewUrlParser",
        "userUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,iHAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AAClDI,EAAAA,gBAAgB,EAAE,IADgC;AAElDC,EAAAA,mBAAmB,EAAE;AAF6B,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAA+B;AAC3BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDL,IAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHH,QAAAA,MAAM,CAAC,2CAA2CG,GAA5C,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,QAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,SAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\"\r\n\r\nlet connection_string = \"mongodb+srv://FiguriX:programeristoljeca@cluster0.fsnvs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n    userNewUrlParser: true,\r\n    userUnifiedTopology: true\r\n})\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        if (db && client.isConnected()){\r\n            resolve(db)\r\n        }\r\n        client.connect(err => {\r\n            if(err){\r\n                reject(\"Došlo je do greške prilikom spajanja: \" + err)\r\n            }\r\n            else{\r\n                console.log(\"Uspješno spajanje na bazu\")\r\n                db = client.db(\"figurix\")\r\n                resolve(db)\r\n            }\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1624193016356
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"filename\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\\\\src\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Slaven\\\\figurix\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Slaven\\figurix\\backend",
      "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Slaven\\figurix\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Slaven\\figurix\\backend\\src\\auth.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Slaven\\figurix\\backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_dotenv[\"default\"].config();\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.collection(\"user\").createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  registerUser: function registerUser(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var db, doc, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Dobrodošli', userData);\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.t0 = userData.email;\n              _context2.next = 7;\n              return _bcrypt[\"default\"].hash(userData.lozinka, 6);\n\n            case 7:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = userData.korisnickoIme;\n              doc = {\n                email: _context2.t0,\n                lozinka: _context2.t1,\n                korisnickoIme: _context2.t2\n              };\n              _context2.prev = 10;\n              _context2.next = 13;\n              return db.collection(\"user\").insertOne(doc);\n\n            case 13:\n              result = _context2.sent;\n\n              if (!(result && result.inesrtedId)) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", result.insertedId);\n\n            case 16:\n              _context2.next = 24;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t3 = _context2[\"catch\"](10);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 22;\n                break;\n              }\n\n              throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\");\n\n            case 22:\n              console.error(_context2.t3);\n              console.log(error);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 18]]);\n    }))();\n  },\n  authenticateuser: function authenticateuser(email, lozinka) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"user\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              console.log(\"++++++++\" + email);\n              console.log(\"++++++++\" + {\n                email: email\n              });\n              console.log(\"++++++++\" + lozinka);\n              console.log(\"++++++++\" + user.email);\n              console.log(\"++++++++\" + user.lozinka);\n              console.log(\"++++++++\" + user);\n              console.log(user);\n\n              if (!(_bcrypt[\"default\"].compare(lozinka, user.lozinka) && user.lozinka === lozinka)) {\n                _context3.next = 20;\n                break;\n              }\n\n              console.log(\"----JA RADIM-----\");\n              delete user.lozinka;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              return _context3.abrupt(\"return\", {\n                token: token,\n                email: user.email\n              });\n\n            case 20:\n              throw new Error(\"cannot authenticate\");\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  verify: function verify(req, res, next) {\n    try {\n      var authorization = req.headers.authorization.split(' ');\n      var type = authorization[0];\n      var token = authorization[1];\n\n      if (type !== \"Bearer\") {\n        return res.status(401).send();\n      } else {\n        req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n        return next();\n      }\n    } catch (e) {\n      return res.status(401).send({\n        Error: 'error'\n      });\n    }\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "dotenv",
        "config",
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "registerUser",
        "userData",
        "console",
        "log",
        "bcrypt",
        "hash",
        "lozinka",
        "korisnickoIme",
        "doc",
        "insertOne",
        "result",
        "inesrtedId",
        "insertedId",
        "name",
        "code",
        "Error",
        "error",
        "authenticateuser",
        "findOne",
        "user",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "verify",
        "req",
        "res",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "status",
        "send",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;AALAA,mBAAOC,MAAP;;AAOA,wDAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa,qBADb;;AAAA;AACEC,UAAAA,EADF;AAAA;AAAA,iBAEIA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBC,WAAtB,CAAkC;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAlC,EAA8C;AAACC,YAAAA,MAAM,EAAE;AAAT,WAA9C,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAF;;eAKe;AACNC,EAAAA,YADM,wBACOC,QADP,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,cAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BF,QAA3B;AADuB;AAAA,qBAER,qBAFQ;;AAAA;AAEnBN,cAAAA,EAFmB;AAAA,6BAKZM,QAAQ,CAACH,KALG;AAAA;AAAA,qBAMJM,mBAAOC,IAAP,CAAYJ,QAAQ,CAACK,OAArB,EAA8B,CAA9B,CANI;;AAAA;AAAA;AAAA,6BAOJL,QAAQ,CAACM,aAPL;AAInBC,cAAAA,GAJmB;AAKnBV,gBAAAA,KALmB;AAMnBQ,gBAAAA,OANmB;AAOnBC,gBAAAA,aAPmB;AAAA;AAAA;AAAA;AAAA,qBAUDZ,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBa,SAAtB,CAAgCD,GAAhC,CAVC;;AAAA;AAUhBE,cAAAA,MAVgB;;AAAA,oBAWjBA,MAAM,IAAIA,MAAM,CAACC,UAXA;AAAA;AAAA;AAAA;;AAAA,gDAYTD,MAAM,CAACE,UAZE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAehB,aAAEC,IAAF,IAAU,YAAV,IAA0B,aAAEC,IAAF,IAAU,KAfpB;AAAA;AAAA;AAAA;;AAAA,oBAgBT,IAAIC,KAAJ,CAAU,yBAAyBd,QAAQ,CAACH,KAAlC,GAA0C,cAApD,CAhBS;;AAAA;AAkBpBI,cAAAA,OAAO,CAACc,KAAR;AACAd,cAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB1B,GAvBU;AAyBLC,EAAAA,gBAzBK,4BAyBYnB,KAzBZ,EAyBmBQ,OAzBnB,EAyB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEnB,qBAFmB;;AAAA;AAE9BX,cAAAA,EAF8B;AAAA;AAAA,qBAGjBA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBsB,OAAtB,CAA8B;AAACpB,gBAAAA,KAAK,EAACA;AAAP,eAA9B,CAHiB;;AAAA;AAG9BqB,cAAAA,IAH8B;AAIlCjB,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAzB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAa;AAACL,gBAAAA,KAAK,EAACA;AAAP,eAAzB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,OAAzB;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAI,CAACrB,KAA9B;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAI,CAACb,OAA9B;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAagB,IAAzB;AACAjB,cAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AAVkC,oBAY/Bf,mBAAOgB,OAAP,CAAed,OAAf,EAAwBa,IAAI,CAACb,OAA7B,KAAuCa,IAAI,CAACb,OAAL,KAAeA,OAZvB;AAAA;AAAA;AAAA;;AAa9BJ,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,qBAAOgB,IAAI,CAACb,OAAZ;AACIe,cAAAA,KAf0B,GAelBC,yBAAIC,IAAJ,CAASJ,IAAT,EAAeK,OAAO,CAACC,GAAR,CAAYC,UAA3B,EAAuC;AAC/CC,gBAAAA,SAAS,EAAG,OADmC;AAE/CC,gBAAAA,SAAS,EAAE;AAFoC,eAAvC,CAfkB;AAAA,gDAoBxB;AACHP,gBAAAA,KAAK,EAALA,KADG;AAEHvB,gBAAAA,KAAK,EAACqB,IAAI,CAACrB;AAFR,eApBwB;;AAAA;AAAA,oBA4BxB,IAAIiB,KAAJ,CAAU,qBAAV,CA5BwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BrC,GAxDU;AA2DXc,EAAAA,MA3DW,kBA2DJC,GA3DI,EA2DCC,GA3DD,EA2DMC,IA3DN,EA2DW;AAClB,QAAG;AACC,UAAIC,aAAa,GAAGH,GAAG,CAACI,OAAJ,CAAYD,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,CAApB;AACA,UAAIC,IAAI,GAAGH,aAAa,CAAC,CAAD,CAAxB;AACA,UAAIZ,KAAK,GAAGY,aAAa,CAAC,CAAD,CAAzB;;AACA,UAAGG,IAAI,KAAK,QAAZ,EAAqB;AACjB,eAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH,OAFD,MAGI;AACAR,QAAAA,GAAG,CAACR,GAAJ,GAASA,yBAAIO,MAAJ,CAAWR,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAT;AACA,eAAOM,IAAI,EAAX;AACH;AACJ,KAXD,CAYA,OAAMO,CAAN,EAAQ;AACL,aAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACvB,QAAAA,KAAK,EAAE;AAAR,OAArB,CAAP;AAEF;AACJ;AA5EU,C",
      "sourceRoot": "C:\\Users\\Slaven\\figurix\\backend\\src\\",
      "sourcesContent": [
        "import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nimport mongo from 'mongodb';\r\nimport connect from './db.js';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n( async () =>{\r\nlet db = await connect();\r\nawait db.collection(\"user\").createIndex({email: 1}, {unique: true});\r\n})();\r\n\r\nexport default {\r\n   async registerUser(userData){\r\n        console.log( 'Dobrodošli', userData);\r\n        let db = await connect();\r\n\r\n        let doc = {\r\n            email: userData.email,\r\n            lozinka: await bcrypt.hash(userData.lozinka, 6),\r\n            korisnickoIme: userData.korisnickoIme,\r\n        };\r\n        try {\r\n           let result = await db.collection(\"user\").insertOne(doc);\r\n           if(result && result.inesrtedId)\r\n               return result.insertedId; \r\n        }\r\n        catch(e){\r\n            if(e.name == \"MongoError\" && e.code == 11000){\r\n                throw new Error(\"Korisnik sa mailom: \" + userData.email + \" već postoji\")\r\n            }\r\n           console.error(e);\r\n           console.log(error)\r\n        }\r\n\r\n    },\r\n    \r\n    async authenticateuser(email, lozinka){\r\n        \r\n        let db = await connect()\r\n        let user = await db.collection(\"user\").findOne({email:email})\r\n        console.log(\"++++++++\" + email)\r\n        console.log(\"++++++++\" + {email:email})\r\n        console.log(\"++++++++\" + lozinka)\r\n        console.log(\"++++++++\" + user.email)\r\n        console.log(\"++++++++\" + user.lozinka)\r\n        console.log(\"++++++++\" + user)\r\n        console.log(user)\r\n        \r\n        if(bcrypt.compare(lozinka, user.lozinka)&&user.lozinka===lozinka){\r\n            console.log(\"----JA RADIM-----\")\r\n            delete user.lozinka\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm : \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            }) \r\n            \r\n            return{\r\n               token,\r\n               email:user.email,\r\n            }\r\n        }\r\n       \r\n        else{\r\n            \r\n            throw new Error(\"cannot authenticate\")\r\n            \r\n        }\r\n    },\r\n    \r\n\r\n    verify(req, res, next){\r\n        try{\r\n            let authorization = req.headers.authorization.split(' ');\r\n            let type = authorization[0];\r\n            let token = authorization[1];\r\n            if(type !== \"Bearer\"){\r\n                return res.status(401).send();\r\n            }\r\n            else{\r\n                req.jwt =jwt.verify(token, process.env.JWT_SECRET);\r\n                return next();\r\n            }\r\n        }\r\n        catch(e){\r\n           return res.status(401).send({Error: 'error'});\r\n           \r\n        }\r\n    }\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1624193016356
  }
}